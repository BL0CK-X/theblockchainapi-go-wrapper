openapi: 3.0.0
info:
  contact:
    email: info@blockchainapi.com
  description: "# About\n\nOur vision is to make it super easy to interact with the\
    \ decentralized web. We want you to be able to do this in any coding language\
    \ and do it easily and quickly. \n\nYou're a key part of our vision. We love feature\
    \ requests! <a href=\"#section/Feature-Requests\">Make one!</a>\n\n# How to Use\
    \ the API\n\nTo use the API, you simply need to create an API key pair.\n\nDoing\
    \ so takes less than a minute. Simply go to <a target=\"_blank\" href=\"https://dashboard.blockchainapi.com\"\
    >the dashboard</a>, create an account, and generate a key pair. You can now use\
    \ this pair to make API requests. You must create your first pair via the dashboard.\n\
    \n# Feature Requests\n\nGot a feature request? Submit it as an issue on <a target=\"\
    _blank\" href=\"https://github.com/BL0CK-X/the-blockchain-api/issues/new/choose\"\
    >our GitHub repo</a> or [email us](mailto:info@blockchainapi.com).\n\n# Contact\n\
    \n<figure>\n    <img \n        width=\"40px\"\n        height=\"40px\" \n    \
    \    src=\"https://theblockchainapi-docs.s3.amazonaws.com/icons/phone.svg\"\n\
    \    />\n    <figcaption style=\"textAlign:center;\">Text / Call: +1 (415) 888\
    \ 4745 </figcaption>\n</figure> <a href=\"mailto:info@blockchainapi.com\" target=\"\
    _blank\">\n    <figure>\n        <img \n            width=\"40px\"\n         \
    \   height=\"40px\" \n            src=\"https://theblockchainapi-docs.s3.amazonaws.com/icons/email.svg\"\
    \n        />\n        <figcaption style=\"textAlign:center;\">Email us: info@blockchainapi.com</figcaption>\n\
    \    </figure>\n</a> <a href=\"https://discord.gg/d49yzrZRAF\" target=\"_blank\"\
    >\n    <figure>\n        <img \n            width=\"40px\"\n            height=\"\
    40px\" \n            src=\"https://theblockchainapi-docs.s3.amazonaws.com/icons/discord.svg\"\
    \n        />\n        <figcaption style=\"textAlign:center;\">Join our Discord</figcaption>\n\
    \    </figure>\n</a> <a href=\"https://twitter.com/_BlockX_\" target=\"_blank\"\
    >\n    <figure>\n        <img \n            width=\"40px\"\n            height=\"\
    40px\" \n            src=\"https://theblockchainapi-docs.s3.amazonaws.com/icons/twitter.svg\"\
    \n        />\n         <figcaption style=\"textAlign:center;\">Follow us on Twitter</figcaption>\n\
    \    </figure>\n</a> <a href=\"https://github.com/BL0CK-X/the-blockchain-api\"\
    \ target=\"_blank\">\n    <figure>\n        <img \n            width=\"40px\"\n\
    \            height=\"40px\" \n            src=\"https://theblockchainapi-docs.s3.amazonaws.com/icons/github.svg\"\
    \n        />\n        <figcaption style=\"textAlign:center;\">Star us on Github</figcaption>\n\
    \    </figure>\n</a>\n\n# Security\n\nCommon dogma is to never give out your seed\
    \ phrase. We agree. It's a matter of security, and anyone who has your seed phrase\
    \ can irreversibly empty your wallet. \n\n<b>When using an API endpoint that requires\
    \ a seed phrase, we highly recommend that users use or create a wallet that they\
    \ do not use as their primary wallet.</b> \n\nHow you make this work depends on\
    \ what you're doing. If you're minting an NFT for example, we recommend creating\
    \ a new wallet and then transferring just enough SOL to that wallet to mint the\
    \ NFT. This is possible on Solana because such transactions cost less than a penny.\
    \ We will have more tutorials in the future that make it easier for you to be\
    \ secure when using our API.\n\nWe have easy-to-use endpoints for <a href=\"#tag/Solana-Wallet/paths/~1solana~1wallet~1secret_recovery_phrase/post\"\
    >creating a new seed phrase</a> and then <a href=\"#tag/Solana-Wallet/paths/~1solana~1wallet~1public_key/post\"\
    >deriving a public key</a> to enable you to transfer to that new wallet.\n\nLet's\
    \ have a constructive dialog about this. Feel free to <a href=\"#section/Contact\"\
    >contact us</a>. I made a video discussing this matter <a target=\"_blank\" href=\"\
    https://youtu.be/m9unUb8Z9qU\">here</a>.\n\nNote: We have had a couple of individuals\
    \ harrass and threaten us. These individuals did <b>not</b> try our API or speak\
    \ to anyone who has used it. They simply saw that we require a seed phrase for\
    \ certain endpoints and figured that the proper response was to attack us. (I\
    \ explain why we do <a target=\"_blank\" href=\"https://youtu.be/m9unUb8Z9qU\"\
    >here</a>.) Such harrassment and threats are not only harmful, but they are also\
    \ illegal, and we will report offenders. Do not harrass us. Rather, feel free\
    \ to discuss your concerns with us and we will be more than happy to work with\
    \ you to come up with a solution.\n\n# Pricing\n\n<b>Each user receives 100 free\
    \ credits. Each user can call endpoints that cost 0 credits up to 50 requests/min\
    \ before being rate-limited.</b> Thereafter, they can upgrade to have a higher\
    \ rate limit. The purpose of this is to act like a free trial -- not to function\
    \ like a freemium model where one can stay on the free tier indefinitely.\n\n\
    You can learn more about our pricing <a href=\"https://dashboard.blockchainapi.com/billing\"\
    \ target=\"_blank\">here</a>. \n\nWe frequently do custom plans. If our pricing\
    \ doesn't work for you, <a href=\"#section/Contact\">contact us</a>.\n\nIf you\
    \ have questions, concerns, feedback, or ideas, <a href=\"#section/Contact\">contact\
    \ us</a>.\n\n# SDKs / API Wrappers\n\nWe have examples using both our <a href=\"\
    https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples\" target=\"_blank\"\
    >Python wrapper and our JavaScript wrapper here</a>.\n\nWe have built a custom\
    \ <a href=\"https://github.com/BL0CK-X/the-blockchain-api-python-wrapper\" target=\"\
    _blank\">Python wrapper</a>.\n\n`pip install theblockchainapi`\n\nWe also have\
    \ published a <a href=\"https://github.com/BL0CK-X/theblockchainapi-javascript-wrapper\"\
    \ target=\"_blank\">JavaScript Wrapper</a>.\n\n`npm install theblockchainapi`\n\
    \nWe also have auto-generated wrappers for the following languages:\n- <a href=\"\
    https://github.com/BL0CK-X/theblockchainapi-go-wrapper\" target = \"_blank\">Go</a>\n\
    - <a href=\"https://github.com/BL0CK-X/theblockchainapi-java-wrapper\" target\
    \ = \"_blank\">Java</a>\n- <a href=\"https://github.com/BL0CK-X/theblockchainapi-kotlin-wrapper\"\
    \ target = \"_blank\">Kotlin</a>\n- <a href=\"https://github.com/BL0CK-X/theblockchainapi-php-wrapper\"\
    \ target = \"_blank\">PHP</a>\n- <a href=\"https://github.com/BL0CK-X/theblockchainapi-swift-wrapper\"\
    \ target = \"_blank\">Swift5</a>\n- <a href=\"https://github.com/BL0CK-X/theblockchainapi-typescript-wrapper\"\
    \ target = \"_blank\">TypeScript</a>\n- <a href=\"https://github.com/BL0CK-X/theblockchainapi-csharp-wrapper\"\
    \ target = \"_blank\">C#</a>\n- <a href=\"https://github.com/BL0CK-X/theblockchainapi-dart-wrapper\"\
    \ target = \"_blank\">Dart</a>\n\nIf you would like a different language as well,\
    \ submit an issue <a href=\"https://github.com/BL0CK-X/theblockchainapi-wrappers/issues/new\"\
    \ target=\"_blank\">here</a>.\n\nIf you run into any bugs with the wrappers, submit\
    \ an issue <a href=\"https://github.com/BL0CK-X/theblockchainapi-wrappers/issues/new\"\
    \ target=\"_blank\">here</a>."
  title: The Blockchain API
  version: "null"
servers:
- url: https://api.blockchainapi.com/v1
tags:
- description: |
    The results of any asynchronous tasks that have been launched. You can poll this endpoint to see when tasks have completed.
  name: Tasks
- description: |
    A wallet consists of two things: a public key and a secret recovery phrase pair. To create a wallet, you must first create a secret recovery phrase. Then, you can generate many public keys from a secret recovery phrase.
  name: Solana Wallet
- description: |
    Easily create a Solana NFT and see related fees for creating an NFT.
  name: Solana NFT
- description: |
    List, de-list, and buy NFTs from Solana NFT marketplaces.
  name: Solana NFT Marketplaces
- description: |
    Interact with the Metaplex Candy Machine smart contract on Solana.
  name: Solana Candy Machine
- description: |
    Interact with Solana accounts.
  name: Solana Account
- description: |
    Work with Solana transactions.
  name: Solana Transaction
- description: |
    Upload to IPFS, Arweave, and Filecoin easily. In order to access this endpoint, please sign up for [the waitlist](https://forms.gle/N4KSqcptpSrHQ1427). This waitlist is unique for this endpoint. Feature requests are welcome on our [GitHub repository](https://github.com/BL0CK-X/the-blockchain-api/issues/new).
  name: Files
- description: |
    Create a project. A project is a mini-API that you can deploy super easily with our API. Even better, when other users use it, you make money! A complete example and walkthrough of the program can be found [here](https://github.com/BL0CK-X/api-developer-program).
  name: Project
- description: |
    Create an endpoint
  name: Endpoint
paths:
  /file:
    post:
      description: Easily upload a file to any of IPFS, Arweave, and Filecoin. Not
        publicly available. Please sign up for <a href="https://forms.gle/N4KSqcptpSrHQ1427"
        target="_blank">the waitlist</a>.
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
          application/json:
            schema:
              $ref: '#/components/schemas/UploadFileRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFileResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "403":
          description: Access denied. Must sign up and be approved for beta. See link
            for application in the description below the "File Upload" header.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Upload a file
      tags:
      - File
  /solana/account/{network}/{public_key}:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-account/get-account\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nGet the\
        \ details of an account on Solana. Learn more about accounts <a href=\"https://docs.solana.com/developing/programming-model/accounts\"\
        \ target=\"_blank\">here</a>.\n\n`Cost: 0.25 Credit` (<a href=\"#section/Pricing\"\
        >See Pricing</a>)"
      operationId: solanaGetAccount
      parameters:
      - description: The network ID (devnet, mainnet-beta)
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: The public key of the account
        example: EEr5yQpNXf7Bru6Rt5podx56HGW9CEehXqgRGh2wa71w
        explode: false
        in: path
        name: public_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account found. Details in response.
        "400":
          description: Invalid input or issue retrieving transaction. See response
            for details
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: Task not found.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get the details of an account on Solana
      tags:
      - Solana Account
  /solana/account/{network}/{public_key}/is_nft:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-account/get-is-nft\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nDetermine\
        \ whether or not a public key is an NFT `mint address`\n\n`Cost: 0.5 Credit`\
        \ (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaGetAccountIsNFT
      parameters:
      - description: The network ID (devnet, mainnet-beta)
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: The public key of the account
        example: EEr5yQpNXf7Bru6Rt5podx56HGW9CEehXqgRGh2wa71w
        explode: false
        in: path
        name: public_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountIsNFT'
          description: Successful response
        "400":
          description: Invalid input or issue retrieving transaction. See response
            for details
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: Task not found.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get if account is NFT
      tags:
      - Solana Account
  /solana/account/{network}/{public_key}/is_candy_machine:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-account/get-is-candy-machine\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nDetermine\
        \ whether or not a public key address corresponds to a candy machine ID or\
        \ candy machine configuration.\n\n`Cost: 1 Credit` (<a href=\"#section/Pricing\"\
        >See Pricing</a>)"
      operationId: solanaGetAccountIsCandyMachine
      parameters:
      - description: The network ID (devnet, mainnet-beta)
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: The public key of the account
        example: EEr5yQpNXf7Bru6Rt5podx56HGW9CEehXqgRGh2wa71w
        explode: false
        in: path
        name: public_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountIsCandyMachine'
          description: Successful response
        "400":
          description: Invalid input or issue retrieving transaction. See response
            for details
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: Task not found.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get if account is candy machine
      tags:
      - Solana Account
  /solana/spl-token/{network}/{public_key}:
    get:
      description: |-
        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-spl-token/get-spl-token" target="_blank">See examples (Python, JavaScript)</a>.

        Retrieves basic information about an SPL token given its `mint_address`.

        You can see the mint addresses of popular SPL tokens <a href="https://raw.githubusercontent.com/solana-labs/token-list/main/src/tokens/solana.tokenlist.json" target="_blank">here</a>.

        Some example mint addresses of SPL tokens:
        - USDC: EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
        - Mango: MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac
        - Serum: SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt
        - Raydium: 4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R
        - wSOL: So11111111111111111111111111111111111111112
        - ATLAS: ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx

        `Cost: 1 Credit` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaGetSPLToken
      parameters:
      - description: The public key of the token
        example: MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac
        explode: false
        in: path
        name: public_key
        required: true
        schema:
          type: string
        style: simple
      - description: The network ID (devnet, mainnet-beta)
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSPLTokenResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: Account not found / not initialized with this public key address.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get SPL token metadata
      tags:
      - Solana SPL Token
  /solana/transaction/{network}/{tx_signature}:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-transaction/get-transaction\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nGet the\
        \ details of a transaction made on Solana.\n\n`Cost: 0.25 Credit` (<a href=\"\
        #section/Pricing\">See Pricing</a>)"
      operationId: solanaGetTransaction
      parameters:
      - description: The network ID (devnet, mainnet-beta)
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: The transaction signature of the transaction
        example: 5wHu1qwD7q5ifaN5nwdcDqNFo53GJqa7nLp2BeeEpcHCusb4GzARz4GjgzsEHMkBMgCJMGa6GSQ1VG96Exv8kt2W
        explode: false
        in: path
        name: tx_signature
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Transaction found. Details in response. Click "Expand All"
            in the documentation sidebar to the right to view an example.
        "400":
          description: Invalid input or issue retrieving transaction. See response
            for details
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: Task not found.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get the details of a transaction made on Solana
      tags:
      - Solana Transaction
  /solana/wallet/generate/secret_recovery_phrase:
    post:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/generate-secret-phrase\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n\nUse this endpoint\
        \ to securely and randomly generate a secret recovery phrase for a Solana\
        \ wallet. \n\n`Cost: 0 Credit` (Free) (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaGenerateSecretRecoveryPhrase
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretPhrase'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Generate secret phrase
      tags:
      - Solana Wallet
  /solana/wallet/generate/private_key:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/generate-private-key" target="_blank">See examples (Python, JavaScript)</a>.

        Use this endpoint to securely and randomly generate a private key for a Solana wallet.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaGeneratePrivateKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratePrivateKey'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Generate private key
      tags:
      - Solana Wallet
  /solana/wallet/private_key:
    post:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/derive-private-key\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nReturns\
        \ a private key array and a base58-encoded private key given wallet authentication.\n\
        \nA wallet is defined by a public key. A public key is derived from a combination\
        \ of seed phrase, derivation path, and passphrase. Changing any *one* of these\
        \ three will change the public key output.\n\n*You can generate a unique public\
        \ key with each combination of secret recovery phrase, passphrase, and derivation\
        \ path. Thus,\nwith a single secret recovery phrase, you can generate many\
        \ public keys. If you are just starting, just supply the secret recovery phrase\
        \ you generated with the Solana Wallet Secret Recovery Phrase endpoint.*\n\
        \n*If you are trying to get a public key that already exists (e.g., created\
        \ in the Phantom wallet), make sure you use the correct derivation path and\
        \ passphrase. To read more about that, see the descriptions of those parameters\
        \ below.*\n\n`Cost: 0 Credit` (Free) (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaDerivePrivateKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPublicKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratePrivateKey'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Derive private key
      tags:
      - Solana Wallet
  /solana/wallet/public_key:
    post:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/derive-public-key\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nReturns\
        \ a public key given wallet authentication.\n\nA wallet is identified by a\
        \ public key. A public key is derived from a combination of seed phrase, derivation\
        \ path, and passphrase. Changing any *one* of these three will change the\
        \ public key output. \n\nIt can also be derived from a private key.\n\n*You\
        \ can generate a unique public key with each combination of secret recovery\
        \ phrase, passphrase, and derivation path; or from a private key. Thus,\n\
        with a single secret recovery phrase, you can generate many public keys; however,\
        \ with a private key, you can only generate one public key. If you are just\
        \ starting, generate a <a href=\"#operation/solanaGenerateSecretRecoveryPhrase\"\
        >secret recovery phrase</a> or <a href=\"#operation/solanaGeneratePrivateKey\"\
        >private key</a>.\n\n*If you are trying to get a public key that already exists\
        \ (e.g., created in the Phantom wallet), make sure you use the correct derivation\
        \ path and passphrase; or just use the private key. To read more about that,\
        \ see the descriptions of those parameters below.*\n\n`Cost: 0 Credit` (Free)\
        \ (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaDerivePublicKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPublicKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKey'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Derive public key
      tags:
      - Solana Wallet
  /solana/wallet/transfer:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/transfer-sol" target="_blank">See transfer SOL example (Python, JavaScript)</a>.

        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/transfer-nft" target="_blank">See transfer NFT example (can also be used for SPL token) (Python, JavaScript)</a>.

        This is a powerful function. It might be slightly confusing because there are several optional parameters, so take some time to review it. This function can send SOL, send an SPL token, or send an NFT. You can set the fee payer of the transaction; you can sign and submit the transaction for confirmation; and you can select to simply return the compiled transaction so that you can submit it to the user for signing (e.g., via Phantom; no private keys required in this case).

        Transfer SOL, a token or an NFT to another address. If you're transferring an NFT, supply the `mint` (the address of the mint) for the `token_address`.

        SENDER: Note that the wallet information is used to authorize the sending of the tokens and identifies the source of the tokens. If `return_compiled_transaction = false`, we sign and submit the transaction (`wallet` is required in this case; do not provide a value for `sender_public_key`). If `return_compiled_transaction = true`, we compile the transaction (one of `wallet` or `sender_public_key` is required in this case; do not provide both).

        RECIPIENT: `recipient_address` identifies the receiver. This is entirely separate from the information used for the SENDER above. So, in this API call, there are two wallets involved, but only one (namely, the SENDER) is needed to authorize the transaction.

        FEE_PAYER: The fee payer of the transaction defaults to `wallet` (or `sender_public_key`). To set a different fee payer, provide a value for `fee_payer_wallet`.

        If you're transfering a token, supply the token address found on the explorer (e.g., see `SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt` for <a href="https://explorer.solana.com/address/SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt" target="_blank">Serum Token</a>) for the `token_address`. If you're transferring SOL, do not supply a value for `token_address`.

        `Cost: 2 Credit` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleTransferResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Transfer SOL, a token, or an NFT to another address
      tags:
      - Solana Wallet
  /solana/wallet/{public_key}/associated_token_account/{mint_address}:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/derive-associated-token-account-address\"\
        \ target=\"_blank\">See example (Python, JavaScript)</a>.\n    \n*Each wallet\
        \ can own tokens, but in Solana, each token is actually held by an <a href=\"\
        https://spl.solana.com/associated-token-account\" target=\"_blank\">associated\
        \ token account</a> (ATA), which is an account specific for a token owned\
        \ by the wallet. When you transfer an SPL token, such as Serum, or transfer\
        \ an NFT, you're transfering from an ATA you own to another person's ATA for\
        \ that specific token. With this endpoint, you can derive an associated token\
        \ address given a wallet and a token address.*\n\n`Cost: 0 Credit` (Free)\
        \ (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaDeriveAssociatedTokenAccountAddress
      parameters:
      - description: The public key of the wallet
        example: 31LKs39pjT5oj6fWjC3F76dHWf9489asCthmgj8wu7pj
        explode: false
        in: path
        name: public_key
        required: true
        schema:
          type: string
        style: simple
      - description: The mint address of the token (either SPL or NFT)
        example: 7EWJNaNYfPYMaqzdAAa4ps5kpqW95B7VHsjhW1kr18sj
        explode: false
        in: path
        name: mint_address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ATAResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Derive an associated token account address
      tags:
      - Solana Wallet
  /solana/wallet/airdrop:
    post:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/get-airdrop\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nUse this\
        \ endpoint to get an airdrop of SOL on the devnet (not real SOL). Amount of\
        \ 0.015, \nwhich is the minimum amount of SOL you need to mint a Metaplex\
        \ NFT and then transfer it to another wallet.\n\n`Cost: 0 Credit` (Free) (<a\
        \ href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaGetAirdrop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirdropRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get an airdrop on devnet
      tags:
      - Solana Wallet
  /solana/wallet/balance:
    post:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/get-wallet-balance\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nSee the\
        \ balance of a wallet in SOL or any SPL token.\n\nTo get the balance of an\
        \ SPL token, supply the `mint_address` of the SPL token. The list of SPL tokens\
        \ can be viewed <a href=\"https://raw.githubusercontent.com/solana-labs/token-list/main/src/tokens/solana.tokenlist.json\"\
        \ target=\"_blank\">here</a>.\n\nYou can also use this endpoint to see whether\
        \ or not a person owns an NFT. Just supply the `mint_address` of the NFT.\
        \ A balance of \"1\" means the person owns the NFT, and a balance of \"0\"\
        \ means the person does not own the NFT. This works in most cases, but we\
        \ are aware of one edge case where a balance of \"0\" will show up for a person\
        \ who is actually the owner of the NFT. We just recommend using the <a href=\"\
        #operation/solanaGetNFTOwner\">getNFTOwner</a> endpoint and comparing that\
        \ output to the expected address.\n\n`Cost: 0.25 Credit` (<a href=\"#section/Pricing\"\
        >See Pricing</a>)"
      operationId: solanaGetBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get wallet's balance in SOL or any SPL
      tags:
      - Solana Wallet
  /solana/wallet/{network}/{public_key}/tokens:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/get-wallet-token-holdings\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nSee the\
        \ token holdings of a given public key address\n\n`Cost: 2 Credits` (<a href=\"\
        #section/Pricing\">See Pricing</a>)"
      operationId: solanaGetTokensBelongingToWallet
      parameters:
      - description: The network ID (devnet, mainnet-beta)
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: The public key of the account whose list of owned NFTs you want
          to get
        example: GKNcUmNacSJo4S2Kq3DuYRYRGw3sNUfJ4tyqd198t6vQ
        explode: false
        in: path
        name: public_key
        required: true
        schema:
          type: string
        style: simple
      - description: Whether or not to include NFTs in the response
        example: false
        explode: true
        in: query
        name: include_nfts
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Whether or not to include holdings that have zero balance. This
          indicates that the wallet held this token or NFT in the past, but no longer
          holds it.
        example: false
        explode: true
        in: query
        name: include_zero_balance_holdings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get address's tokens and respective balances
      tags:
      - Solana Wallet
  /solana/wallet/{network}/{public_key}/transactions:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/blockchain-api/tree/main/examples/solana-wallet/get-wallet-transactions\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nSee the\
        \ transaction signatures of a given public key address\n\n`Cost: 1 Credits`\
        \ (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaGetWalletTransactions
      parameters:
      - description: The network ID (devnet, mainnet-beta)
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: The public key of the account whose list of signatures you want
          to get
        example: GKNcUmNacSJo4S2Kq3DuYRYRGw3sNUfJ4tyqd198t6vQ
        explode: false
        in: path
        name: public_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get address's associated transaction signatures
      tags:
      - Solana Wallet
  /solana/wallet/{network}/{public_key}/nfts:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-wallet/get-wallet-nfts\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nSee the\
        \ NFTs that belong to a given public key address\n\n`Cost: 3 Credits` (<a\
        \ href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaGetNFTsBelongingToWallet
      parameters:
      - description: The network ID (devnet, mainnet-beta)
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: The public key of the account whose list of owned NFTs you want
          to get
        example: HE3ZYk4aWfKD7R9EmFQbxjj75JdgHuDztNAsseKVan82
        explode: false
        in: path
        name: public_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNFTsResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get address's NFTs
      tags:
      - Solana Wallet
  /solana/nft:
    post:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-nft/create-an-nft\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n\nCreate a Metaplex\
        \ NFT on Solana. \n\nRead more on this <a href=\"https://blog.blockchainapi.com/2021/11/16/a-note-on-nfts.html\"\
        \ target=\"_blank\">here</a>.\n\nNote: Please see <a href=\"https://blog.blockchainapi.com/2022/01/18/how-to-format-off-chain-nft-metadata.html\"\
        \ target=\"_blank\">this article</a> to learn more about what `nft_upload_method`\
        \ means and how storing the metadata of an NFT works.\n\nIf you're using `nft_upload_method\
        \ = \"LINK\"`, then to add attributes to the NFT or an image, add them to\
        \ a JSON file and upload that to Arweave/IPFS/Filecoin. See the JSON format\
        \ <a href=\"https://blog.blockchainapi.com/2022/01/18/how-to-format-off-chain-nft-metadata.html\"\
        >here</a>.\n\nThen supply the link to the JSON file in `nft_url`. \n\nNOTE:\
        \ Don't use `nft_metadata`. Values provided here do not do anything at the\
        \ moment. We are fixing this soon.\n\n`Cost: 5 Credits` (<a href=\"#section/Pricing\"\
        >See Pricing</a>)"
      operationId: solanaCreateNFT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NFTMintRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFT'
          description: Successful Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFTMintErrorResponse'
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "414":
          description: URI too long (the data you provided was too large [e.g., the
            metadata provided was 500kb])
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Create an NFT on Solana
      tags:
      - Solana NFT
  /solana/nft/search:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-nft/search-nfts" target="_blank">See examples (Python, JavaScript)</a>.

        With this endpoint, you can search for NFTs by their symbol, name of NFTs, uuid, configuration address, and update authority.

        The output is a list of NFTs that match your query.

        You can also provide multiple search clauses, such as the update authority (`update_authority="G17UmNGnMJ851x3M1JXocgpft1afcYedjPuFpo1ohhCk"`) and symbol begins with "Sol" (`symbol="Sol", symbol_search_method='begins_with'`).

        `Cost: 1 Credit` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaSearchNFTs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NFTSearchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NFTSearchResponse'
                type: array
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Search NFTs on Solana
      tags:
      - Solana NFT
  /solana/nft/{network}/{mint_address}:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-nft/get-nft-metadata\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>. \n    \nGet the\
        \ metadata of an NFT.\n\nIf you're looking for metadata such as attributes\
        \ and others, you can retrieve them from the link in the URI field of the\
        \ NFT metadata returned. See the example on the right. The URI is an Arweave\
        \ URL. That contains the attributes and other information about the NFT. That\
        \ URL is stored on the Solana blockchain.\n\n`Cost: 0.25 Credit` (<a href=\"\
        #section/Pricing\">See Pricing</a>)"
      operationId: solanaGetNFT
      parameters:
      - description: The network ID
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - devnet
          - mainnet-beta
          type: string
        style: simple
      - description: The mint address of the NFT
        example: EEr5yQpNXf7Bru6Rt5podx56HGW9CEehXqgRGh2wa71w
        explode: false
        in: path
        name: mint_address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFT'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: The doesn't exist
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get an NFT's metadata
      tags:
      - Solana NFT
  /solana/nft/{network}/{mint_address}/owner:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-nft/get-nft-owner\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>. \n    \nGet the\
        \ owner of an NFT. This returns the public key of the wallet that owns the\
        \ associated token account that owns the NFT.\n\nIf you want to get the associated\
        \ token account that literally owns the NFT, derive the associated token account\
        \ address from the public key returned and the NFT mint address using <a href=\"\
        #operation/solanaDeriveAssociatedTokenAccountAddress\">this endpoint</a>.\n\
        \n`Cost: 0.25 Credit` (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaGetNFTOwner
      parameters:
      - description: The network ID
        example: devnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - devnet
          - mainnet-beta
          type: string
        style: simple
      - description: The mint address of the NFT
        example: 4zH3Rwm1QXdfTSUqsYmeUBY4QqQmQEXJVbv4ErSK736Q
        explode: false
        in: path
        name: mint_address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFTOwnerResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: The doesn't exist
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get owner of an NFT
      tags:
      - Solana NFT
  /solana/nft/mint/fee:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-nft/get-nft-mint-fee\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n    \nGet the\
        \ estimated fee for minting an NFT on the Solana blockchain using the Metaplex\
        \ protocol.\n\n`Cost: 0 Credit` (Free) (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaGetNFTMintFee
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFTMintFee'
          description: Successful Response
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get the NFT mint fee
      tags:
      - Solana NFT
  /solana/nft/candy_machine_id:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-nft/get-nft-candy-machine-id" target="_blank">See examples (Python, JavaScript)</a>.

        Get the candy machine ID from where the NFT came, if any. NFTs can also be minted without a candy machine.

        It's also possible that we return "Not Found" when the NFT actually did come from a version of a candy machine. We check for the most popular versions of candy machine, but it is possible that someone creates their own candy machine version and mints NFTs from it.

        `Cost: 1 Credit` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaGetNFTsCandyMachineId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCandyMachineIDRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCandyMachineIDResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: Not found
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Get the ID of the candy machine of an NFT
      tags:
      - Solana NFT
  /solana/nft/marketplaces/listing/{network}/{mint_address}:
    get:
      description: |-
        <a href="https://github.com/BL0CK-X/blockchain-api/tree/main/examples/solana-nft-marketplaces/get-nft-listing" target="_blank">See examples (Python, JavaScript)</a>.

        Get the Marketplace listing of a Solana NFT.

        Currently checks the following Solana NFT martketplaces: SolSea, Magic Eden, Solanart, Alpha Art, Digital Eyes, Exchange.art

        `Cost: 1 Credits`, (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaGetNFTListing
      parameters:
      - description: The network ID
        example: devnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - devnet
          - mainnet-beta
          type: string
        style: simple
      - description: The mint address of the NFT you want to buy
        example: 7GA16mQup7ESJbaD6n49VCwVG9kRkyQDzWKhBSLjbYqr
        explode: false
        in: path
        name: mint_address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNFTListingResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "403":
          description: |
            Our API will throw a 403 if you are providing a body in the GET request.  Such requests are insecure and rejected. The solution is not to provide any sort of body in any GET request.
        "404":
          description: No marketplace listing found for this NFT.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get NFT Listing
      tags:
      - Solana NFT Marketplaces
  /solana/nft/marketplaces/{exchange}/buy/{network}/{mint_address}:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/blockchain-api/tree/main/examples/solana-nft-marketplaces/buy-nft" target="_blank">See examples (Python, JavaScript)</a>.

        Buy an NFT on a Solana Exchange.

        Exchanges supported: SolSea, Magic Edennpm

        `Cost: 25 Credits`, `Cost: 3 Credits on Devnet` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaBuyNFT
      parameters:
      - description: The network ID
        example: devnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - devnet
          - mainnet-beta
          type: string
        style: simple
      - description: The NFT exchange to interact with
        example: solsea
        explode: false
        in: path
        name: exchange
        required: true
        schema:
          enum:
          - solsea
          - magic-eden
          type: string
        style: simple
      - description: The mint address of the NFT you want to buy
        example: 7GA16mQup7ESJbaD6n49VCwVG9kRkyQDzWKhBSLjbYqr
        explode: false
        in: path
        name: mint_address
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Buy
      tags:
      - Solana NFT Marketplaces
  /solana/nft/marketplaces/{exchange}/list/{network}/{mint_address}:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/blockchain-api/tree/main/examples/solana-nft-marketplaces/list-nft" target="_blank">See examples (Python, JavaScript)</a>.

        List an NFT on a Solana Exchange.

        Exchanges supported: SolSea, Magic Eden

        `Cost: 12 Credits`, `Cost: 3 Credits on Devnet` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaListNFT
      parameters:
      - description: The network ID
        example: devnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - devnet
          - mainnet-beta
          type: string
        style: simple
      - description: The NFT exchange to interact with
        example: solsea
        explode: false
        in: path
        name: exchange
        required: true
        schema:
          enum:
          - solsea
          - magic-eden
          type: string
        style: simple
      - description: The mint address of the NFT you want to buy
        example: 7GA16mQup7ESJbaD6n49VCwVG9kRkyQDzWKhBSLjbYqr
        explode: false
        in: path
        name: mint_address
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: List
      tags:
      - Solana NFT Marketplaces
  /solana/nft/marketplaces/{exchange}/delist/{network}/{mint_address}:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/blockchain-api/tree/main/examples/solana-nft-marketplaces/delist-nft" target="_blank">See examples (Python, JavaScript)</a>.

        Delist an NFT from a Solana Exchange.

        Exchanges supported: SolSea, Magic Eden

        `Cost: 8 Credits`, `Cost: 3 Credits on Devnet` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaDelistNFT
      parameters:
      - description: The network ID
        example: devnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - devnet
          - mainnet-beta
          type: string
        style: simple
      - description: The NFT exchange to interact with
        example: solsea
        explode: false
        in: path
        name: exchange
        required: true
        schema:
          enum:
          - solsea
          - magic-eden
          type: string
        style: simple
      - description: The mint address of the NFT you want to buy
        example: 7GA16mQup7ESJbaD6n49VCwVG9kRkyQDzWKhBSLjbYqr
        explode: false
        in: path
        name: mint_address
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelistRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelistResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Delist
      tags:
      - Solana NFT Marketplaces
  /solana/nft/marketplaces/analytics:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/blockchain-api/tree/main/examples/solana-nft-marketplaces/analytics" target="_blank">See examples (Python, JavaScript)</a>.

        A collection is a list of NFTs.

        Any collection can thus be defined as a list of mint addresses.

        This endpoint takes in a list of mint addresses (effectively, a collection), a start time (optional), and an end time (optional) and outputs the floor for that period, the volume for that period, and the transaction history for each NFT in the list (buy, list, delist, update price) for that period.

        We are currently compiling a dictionary of collection names to list of mint addresses for public use. Please contribute <a href="https://github.com/BL0CK-X/solana-nft-collection-mint-addresses" target="_blank">here</a>.

        Currently scans the following Solana NFT martketplaces: SolSea, Magic Eden, Solanart, Alpha Art, Digital Eyes, Exchange.art

        `Cost: 15 Credits`, (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaGetNFTMarketplaceAnalytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NFTAnalyticsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFTAnalyticsResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: No marketplace listing found for this NFT.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get NFT Analytics
      tags:
      - Solana NFT Marketplaces
  /solana/nft/marketplaces/analytics/recent_transactions:
    get:
      description: |-
        <a href="https://github.com/BL0CK-X/blockchain-api/tree/main/examples/solana-nft-marketplaces/recent-transactions" target="_blank">See examples (Python, JavaScript)</a>.

        Get all NFT transactions across all major marketplaces in the last 30 minutes.

        Currently checks for the following Solana NFT martketplaces: SolSea, Magic Eden, Solanart, Alpha Art, Digital Eyes, Exchange.art

        `Cost: 15 Credits`, (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaGetNFTMarketplaceRecentTransactions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFTRecentTransactions'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "403":
          description: |
            Our API will throw a 403 if you are providing a body in the GET request.  Such requests are insecure and rejected. The solution is not to provide any sort of body in any GET request.
        "404":
          description: No marketplace listing found for this NFT.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get Recent NFT Transactions
      tags:
      - Solana NFT Marketplaces
  /solana/nft/marketplaces/analytics/market_share:
    get:
      description: |-
        <a href="https://github.com/BL0CK-X/blockchain-api/tree/main/examples/solana-nft-marketplaces/market-share" target="_blank">See examples (Python, JavaScript)</a>.

        Get the Marketplace listing of a Solana NFT.

        Currently checks for the following Solana NFT martketplaces: SolSea, Magic Eden, Solanart, Alpha Art, Digital Eyes, Exchange.art

        `Cost: 3 Credits`, (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaGetNFTMarketplaceMarketShare
      responses:
        "200":
          content:
            application/json:
              schema:
                description: |
                  A dictionary mapping an exchange ID to the volume of sales on the exchange over the last 30 minutes
                example:
                  alpha-art: 9
                  digital-eyes: 0
                  exchange-art: 2
                  magic-eden: 1388
                  solanart: 42
                  solsea: 3
                properties:
                  exchange_str:
                    description: |
                      The string ID of the exchange (see right bar for example)
                    type: number
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "403":
          description: |
            Our API will throw a 403 if you are providing a body in the GET request.  Such requests are insecure and rejected. The solution is not to provide any sort of body in any GET request.
        "404":
          description: No marketplace listing found for this NFT.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Get Marketplace Market Share
      tags:
      - Solana NFT Marketplaces
  /solana/nft/candy_machine:
    post:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/create-test-candy-machine\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n \nUse this endpoint\
        \ to create a test candy machine so that you can test your minting bot.\n\n\
        `Cost: 1 Credit` (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaCreateTestCandyMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestCandyMachineRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestCandyMachineResponse'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Create a test CM
      tags:
      - Solana Candy Machine
  /solana/nft/candy_machine/search:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/search-candy-machines" target="_blank">See examples (Python, JavaScript)</a>.

        With this endpoint, you can search candy machines by their symbol, name of NFTs, uuid, configuration address, and update authority.

        The output is a list of config addresses.

        You can also provide multiple search clauses, such as the update authority (`update_authority="G17UmNGnMJ851x3M1JXocgpft1afcYedjPuFpo1ohhCk"`) and symbol begins with "Sol" (`symbol="Sol", symbol_search_method='begins_with'`).

        `Cost: 2 Credits` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaSearchCandyMachines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandyMachineSearchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                - 9AYhVG9rH4DwPufEmSD1PD3vs64GhaXWNzXb33jFpByA
                - FmZNv5HqPWEqXHYtKPKe15WF8PuNk1FbJmVMN92dVjNP
                - 6Anxd2Tn7KEEMKpGyBdVWTCp5jpAum8cppgXMJTzp44R
                items:
                  description: The config address of a matching candy machine
                  type: string
                type: array
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Search CMs
      tags:
      - Solana Candy Machine
  /solana/nft/candy_machine/list:
    get:
      description: |-
        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/list-all-candy-machines" target="_blank">See examples (Python, JavaScript)</a>.

        With this endpoint, you can list all candy machines published to Solana mainnet.

        We update this data every 15 minutes.

        The output is a list of config addresses, currently about 17000 in length.

        `Cost: 2 Credits` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaListAllCandyMachines
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  last_updated: 1639529803
                  config_addresses:
                  - 9AYhVG9rH4DwPufEmSD1PD3vs64GhaXWNzXb33jFpByA
                  - FmZNv5HqPWEqXHYtKPKe15WF8PuNk1FbJmVMN92dVjNP
                  - 6Anxd2Tn7KEEMKpGyBdVWTCp5jpAum8cppgXMJTzp44R
                  config_addresses_v1:
                  - 9AYhVG9rH4DwPufEmSD1PD3vs64GhaXWNzXb33jFpByA
                  - FmZNv5HqPWEqXHYtKPKe15WF8PuNk1FbJmVMN92dVjNP
                  - 6Anxd2Tn7KEEMKpGyBdVWTCp5jpAum8cppgXMJTzp44R
                  config_addresses_v2:
                  - BfA9f9My57iUQE1tFNd2hNzFMK9fRMbyDvWNGuFw38gB
                  - w8cmmrTixuf2rdVbxLLFsiRwcZrERxMfb8JbDKSj26f
                  - C1tf83mSHT7aptd5VagjY2VXjfqa7qgkZkjiW5nPQshN
                  config_addresses_magic-eden-v1:
                  - GXYYT2V594gfXoYWFj4UXbEMkymoZ6hVwxqWXjQmwRBa
                  - 8fFG9VsS1PGEuQZJjxZMjXfimysUfR1sePcTqq1AehCM
                  - 4PN9nnWC4ttvNpNxxaGyTkpMyVfG1a7N54U4cr4nwigF
                properties:
                  last_updated:
                    description: The unix epoch time stamp of when the candy machine
                      list was last updated (UTC time)
                    type: int
                  config_addresses:
                    description: List of `v1` config addresses. Only supplied for
                      backwards compatibility.
                    items:
                      properties:
                        config_address:
                          description: The config addresses of a `v1` candy machine
                          type: string
                    type: array
                  config_addresses_v1:
                    description: List of config addresses for all `v1` candy machines
                      on Solana.
                    items:
                      properties:
                        config_address:
                          description: The config address of a `v1` candy machine
                          type: string
                    type: array
                  config_addresses_v2:
                    description: List of config addresses for all `v2` candy machines
                      on Solana.
                    items:
                      properties:
                        config_address:
                          description: The config address of a `v2` candy machine
                          type: string
                    type: array
                  config_addresses_magic-eden-v1:
                    description: List of config addresses for all `Magic Eden` candy
                      machines on Solana.
                    items:
                      properties:
                        config_address:
                          description: The config address of a `Magic Eden` candy
                            machine
                          type: string
                    type: array
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: List all CMs
      tags:
      - Solana Candy Machine
  /solana/nft/candy_machine/{network}/{candy_machine_id}/nfts:
    get:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/get-candy-machine-all-nfts\"\
        \ target=\"_blank\"> See examples (Python, JavaScript)</a>.\n\nUse this endpoint\
        \ to get the list of all NFTs (minted and unminted) from a Solana Candy Machine.\n\
        \nThis works for `v1` and `v2` candy machines. \n\n*However*, for `v2` only\
        \ the value for `all_nfts` is provided. To determine which are minted and\
        \ unminted follow this example.\n\nYou do not need to specify `v1` or `v2`\
        \ for this endpoint as it will automatically determine it from the candy machine\
        \ ID.\n\nSee example for how to get the list of NFT hashes <a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/get-candy-machine-hash-table\"\
        \ target=\"_blank\">here</a>.\n\n\n\n`Cost: 2 Credits` (<a href=\"#section/Pricing\"\
        >See Pricing</a>)"
      operationId: solanaGetAllNFTsFromCandyMachine
      parameters:
      - description: The network ID
        example: mainnet-beta
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - devnet
          - mainnet-beta
          type: string
        style: simple
      - description: The ID of the candy machine
        example: FmkrvXRenCGtwBHw3VtBcExp8eTdnau97upaewF4GUEX
        explode: false
        in: path
        name: candy_machine_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllNFTsResponse'
          description: Successful Response. Click "Expand All" on the right sidebar
            to see more.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
        "404":
          description: Not found
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: "Get CM's NFTs \n"
      tags:
      - Solana Candy Machine
  /solana/nft/candy_machine/metadata:
    post:
      description: |-
        <a href="https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/get-candy-machine-metadata" target="_blank">See examples (Python, JavaScript)</a>.

        Use this endpoint to get metadata about a Metaplex candy machine. This includes the goLiveDate, itemsAvailable, and itemsRedeemed. To see what is included, expand the green successful response below.

        NOTE: Supply exactly one of `candy_machine_id`, `config_address`, or `uuid`. If you provide more than one, you will receive a `400` error.


        `Cost: 2 Credits` (<a href="#section/Pricing">See Pricing</a>)
      operationId: solanaGetCandyMachineMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCandyMetadataRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCandyMetadataResponse'
          description: |
            Successful Response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCandyMetadataErrorResponse'
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Get a CM's metadata
      tags:
      - Solana Candy Machine
  /solana/nft/candy_machine/mint:
    post:
      description: "<a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/mint-from-candy-machine\"\
        \ target=\"_blank\">See examples (Python, JavaScript)</a>.\n\nUse this endpoint\
        \ to mint an NFT from a metaplex candy machine as soon as it drops.\n\nThis\
        \ only works for `v1` and `v2` candy machines, and does not work for candy\
        \ machines of any other type such as Magic Eden candy machines.\n\nIn order\
        \ to achieve speed, this endpoint sends the transaction without checking whether\
        \ or not it confirmed. It could still fail, for example, because the candy\
        \ machine ran out of available mints. You should check the status of the transaction\
        \ using our <a href=\"#operation/solanaGetTransaction\">getTransaction</a>\
        \ endpoint. <a href=\"https://gist.github.com/joshwolff1/298e8251e43ff9b4815028683b1ca17d\"\
        \ target=\"_blank\">Here's an example</a> of how to do this.\n\nMint transactions\
        \ for candy machines that have capatcha/Civic enabled will fail. There is\
        \ a gatekeeper functionality where you must manually verify through Civic\
        \ and captcha in order to mint from a candy machine. In this functionality,\
        \ Civic signs the transaction. Therefore, if the gatekeeper functionality\
        \ is enabled, our “Mint from candy machine” endpoint will fail because it\
        \ is missing a signer. If it is not enabled, then our “Mint from candy machine”\
        \ endpoint will succeed. One caveat is the attribute “expireOnUse”. If this\
        \ is True, then you have to solve a captcha each time. In this case, the “\
        Mint from candy machine” endpoint will fail. If this is False, then your first\
        \ verification is sufficient for further mints. In which case, after verifying\
        \ manually the first time, you can use our endpoint thereafter. \n\nYou can\
        \ check if the gatekeeper functionality is enabled with this <a href=\"#operation/solanaGetCandyMachineMetadata\"\
        >endpoint</a>.\n\n\n`Cost: 8 Credits` (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: solanaMintFromCandyMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MintNFTRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintNFTResponse'
          description: |
            Successful Response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintNFTErrorResponse'
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: Mint from a CM
      tags:
      - Solana Candy Machine
  /project:
    post:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        A project is an entire mini-API.

        When you create a project, this initializes the project in our database and the API documentation for the project.

        After initialization, you can <a href="#operation/createEndpoint">add endpoints</a> to the documentation and deploy the project's mini-API to our servers. Learn more <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Create a project
      tags:
      - Project
  /project/{project_id}:
    delete:
      description: "A complete example and walkthrough of the program can be found\
        \ <a href=\"https://github.com/BL0CK-X/api-developer-program\" target=\"_blank\"\
        >here</a>.\n\nDeletes a project. This will remove the mini-API entirely from\
        \ our system. \n\n`Cost: 0 Credit` (Free) (<a href=\"#section/Pricing\">See\
        \ Pricing</a>)"
      operationId: deleteProject
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      responses:
        "200":
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Delete a project
      tags:
      - Project
    get:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        Update your project's metadata. None of these parameters are required. Just provide the parameters that you would like to update.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: getProject
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Get a project's metadata
      tags:
      - Project
    post:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        Update your project's metadata. None of these parameters are required. Just provide the parameters that you would like to update.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: updateProject
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Successful Response
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Update a project
      tags:
      - Project
  /project/{project_id}/{version}:
    delete:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        Delete a version for the project. There must always be at least one version deployed, so you cannot delete the last remaining version of the project. This will auto-deploy the project and update its documentation, if necessary.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: deleteProjectVersion
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      - description: The version of the project.
        example: 2
        explode: false
        in: path
        name: version
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Delete a project version
      tags:
      - Project
    post:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        Create a new version for the project. The version must be higher than all existing versions. This will duplicate the existing project's latest version and auto-deploy it. To update these endpoints, simply redeploy on this project's versions.

        When a project is first created, it uses the default "0.0.1" version.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: createProjectVersion
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      - description: The version of the project.
        example: 2
        explode: false
        in: path
        name: version
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Create a new project version
      tags:
      - Project
  /project/{project_id}/deploy/url:
    post:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        Get the deployment URL for the project.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: getProjectDeploymentURL
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                platform: Windows
              properties:
                platform:
                  description: The platform for which the binary was compiled. Note
                    that Darwin = Mac.
                  enum:
                  - Darwin
                  - Linux
                  - Windows
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentURL'
          description: Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Get the deployment URL
      tags:
      - Project
  /project/{project_id}/deploy/status:
    post:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        Get the deployment status for the project after uploading the binary. Will be: `DEPLOYED` or NOT `DEPLOYED`.

        After it is `DEPLOYED`, you can then make requests to your API.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: getProjectDeploymentStatus
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: Whether or not the binary was successfully deployed
                      and can now be called via the API
                    enum:
                    - DEPLOYED
                    - NOT DEPLOYED
                    type: string
                  status_code:
                    description: '`1` corresponds to `DEPLOYED`. `-1` corresponds
                      to `NOT DEPLOYED`.'
                    enum:
                    - 1
                    - -1
                    type: number
          description: Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Get deployment status
      tags:
      - Project
  /project/{project_id}/stats:
    get:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        Get the usage stats for your mini-API.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: getProjectStats
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatItem'
                type: array
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Get a project's stats
      tags:
      - Project
  /project/list:
    get:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        List all projects associated with your account.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: listProjects
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        List projects
      tags:
      - Project
  /project/{project_id}/{version}/documentation:
    post:
      description: "A complete example and walkthrough of the program can be found\
        \ <a href=\"https://github.com/BL0CK-X/api-developer-program\" target=\"_blank\"\
        >here</a>.\n\nUpdate your project's documentation. \n\nYour project's documentation\
        \ can only represent *one* version of your API.\n\nThus, when you call this,\
        \ the `current_documentation_version` attribute of your project is set to\
        \ the version supplied in the call.\n\n`Cost: 0 Credit` (Free) (<a href=\"\
        #section/Pricing\">See Pricing</a>)"
      operationId: updateProjectDocumentation
      parameters:
      - description: The ID of the project. Created and returned when a project is
          created.
        example: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        explode: false
        in: path
        name: project_id
        required: true
        style: simple
      - description: The version of the project.
        example: 2
        explode: false
        in: path
        name: version
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Update the project's documentation
      tags:
      - Project
  /endpoint:
    post:
      description: "A complete example and walkthrough of the program can be found\
        \ <a href=\"https://github.com/BL0CK-X/api-developer-program\" target=\"_blank\"\
        >here</a>.\n\nCreate or update an `endpoint` for a `project`. \n\nAn `endpoint`\
        \ is a function that is a part of a mini-API `project`.\n\nThis endpoint adds\
        \ the `endpoint` to the `project`'s documentation. However, this does not\
        \ deploy the `endpoint`. To do so, you must <a href=\"#operation/deployProject\"\
        >deploy the project</a>.\n\nAll attributes except `group_name` are required\
        \ if **creating** an `endpoint`.\n\nOnly `path`, `project_id`, and `version`\
        \ are required if **updating** an `endpoint`.\n\n`Cost: 0 Credit` (Free) (<a\
        \ href=\"#section/Pricing\">See Pricing</a>)"
      operationId: setEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Create / update an endpoint
      tags:
      - Endpoint
  /endpoint/metadata:
    post:
      description: "A complete example and walkthrough of the program can be found\
        \ <a href=\"https://github.com/BL0CK-X/api-developer-program\" target=\"_blank\"\
        >here</a>.\n\nGet an endpoint's metadata from a project. \n\n`Cost: 0 Credit`\
        \ (Free) (<a href=\"#section/Pricing\">See Pricing</a>)"
      operationId: getEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointReference'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Get an endpoint's metadata
      tags:
      - Endpoint
  /endpoint/delete:
    post:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        Deletes an endpoint from a project. This endpoint removes the endpoint from the project's documentation. However, this does un-deploy the endpoint. To do so, you must <a href="#operation/deployProject">deploy the project</a>.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: deleteEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointReference'
      responses:
        "200":
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        Delete an endpoint
      tags:
      - Endpoint
  /endpoint/list:
    get:
      description: |-
        A complete example and walkthrough of the program can be found <a href="https://github.com/BL0CK-X/api-developer-program" target="_blank">here</a>.

        List all endpoints that you have added under your account.

        `Cost: 0 Credit` (Free) (<a href="#section/Pricing">See Pricing</a>)
      operationId: listEndpoints
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Endpoint'
                type: array
          description: |
            Successful Response.
        "400":
          description: Bad request (check response message)
        "401":
          description: Invalid API key pair in headers
        "402":
          description: Payment required. Occurs when you run out of API requests.
            Upgrade <a href="https://dashboard.theblockchainapi.com/billing" target="_blank">here</a>.
      security:
      - APIKeyID: []
        APISecretKey: []
      summary: |
        List all endpoints
      tags:
      - Endpoint
components:
  schemas:
    UploadFileRequest:
      properties:
        upload_method:
          default: IPFS
          enum:
          - IPFS
          - Arweave
          - Filecoin
          type: string
      type: object
    GetFileResponse:
      example:
        uri: https://ipfs.io/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/wiki/Aardvark.html
        size: "1024"
        upload_time: "1634073275"
      properties:
        uri:
          type: string
        size:
          description: File size in kilobytes
          type: string
        upload_time:
          description: The time when the file was uploaded
          type: string
      type: object
    Account:
      example:
        context:
          slot: 108532393
        value:
          data:
            parsed:
              info:
                decimals: 0
                freeze_authority: HATCV2FuPkoN4S5PQqjk8vz17FTH9XFu7hymkCJo483V
                is_initialized: true
                mint_authority: HATCV2FuPkoN4S5PQqjk8vz17FTH9XFu7hymkCJo483V
                supply: "1"
              type: mint
            program: spl-token
            space: 82
          executable: false
          lamports: 1461600
          owner: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA
          rent_epoch: 250
      properties:
        context:
          $ref: '#/components/schemas/Account_context'
        value:
          $ref: '#/components/schemas/Account_value'
    AccountIsNFT:
      example:
        is_nft: true
      properties:
        is_nft:
          type: boolean
      required:
      - is_nft
      type: object
    AccountIsCandyMachine:
      example:
        is_candy_machine: true
        candy_machine_contract_version: v1
      properties:
        is_candy_machine:
          type: boolean
        candy_machine_contract_version:
          description: Whether or not this corresponds to candy machine v1, candy
            machine v2, or a Magic Eden candy machine.
          enum:
          - v1
          - v2
          - magic-eden-v1
          type: string
      required:
      - is_candy_machine
      type: object
    GetSPLTokenResponse:
      example:
        decimals: 6
        freeze_authority: 3sNBr7kMccME5D55xNgsmYpZnzPgP2g12CixAajXypn6
        is_initialized: true
        mint_authority: 2wmVCSfPxGPjrnMMn7rchp4uaeoTqN39mXFC2zhPdri9
        supply: "4785000018865782"
      properties:
        decimals:
          description: |
            The number of decimals of the token. For example, if the USDC token has 6 decimals, then you need 1 * 10e6 = 1,000,000 tokens to have 1 USDC. The purpose of this is that everything must be stored as  an integer. Thus, if there are $100 USDC in total, there must be $100 * 10e6 tokens in order for the $100 to be divisible into lower denominations than $1.
          type: number
        freeze_authority:
          description: Public key address
          type: string
        mint_authority:
          description: Public key address
          type: string
        is_initialized:
          type: boolean
        supply:
          description: The supply of the token
          type: string
    Transaction:
      example:
        id: 1
        jsonrpc: "2.0"
        result:
          block_time: 1634782875
          meta:
            err: {}
            fee: 5000
            inner_instructions: []
            log_messages:
            - Program 11111111111111111111111111111111 invoke [1]
            - Program 11111111111111111111111111111111 success
            post_balances:
            - 1263499110
            - 10000000
            - 1
            post_token_balances: []
            pre_balances:
            - 1273504110
            - 0
            - 1
            pre_token_balances: []
            rewards: []
            status:
              _ok: {}
          slot: 102654672
          transaction:
            message: null
            account_keys:
            - pubkey:
                _bn: dee6a11fcc1dc31f0ed939f826fbade9c01c1a911e023cd6bd2cd9a089144a69
              signer: true
              writable: true
            - pubkey:
                _bn: 1dcd39962ad5410c1996873e23c4e9af189bcca84b0c24fd2ff1865a3382c288
              signer: false
              writable: true
            - pubkey:
                _bn: "00"
              signer: false
              writable: false
            instructions:
            - parsed:
                info:
                  destination: 31LKs39pjT5oj6fWjC3F76dHWf9489asCthmgj8wu7pj
                  lamports: 10000000
                  source: G17UmNGnMJ851x3M1JXocgpft1afcYedjPuFpo1ohhCk
                type: transfer
              program: system
              program_id:
                _bn: "00"
            recent_blockhash: B4HW8uQT3VddawYKhsoHbhSYYARfWFCxJwaoAZBYBo1Y
            signatures:
            - 5MB3KY9Dps7Z9E9gJNykfaDHD8cwgxXhszxoeXEdcpUqsLm4BMjpwKWRKr4ojGg7s7wfpLwEPXLACZxhzAFBg4nz
      properties:
        id:
          type: number
        jsonrpc:
          type: string
        result:
          $ref: '#/components/schemas/Transaction_result'
    SecretPhrase:
      example:
        secret_recovery_phrase: fire owner display success half rescue pledge oval
          foam gossip window once
      properties:
        secret_recovery_phrase:
          description: "The twelve word phrase that can be used to derive many public\
            \ key addresses (e.g., bottom army bless castle alter habit dish embody\
            \ child flame smooth zone).\n\nTo derive a public key, you need a secret\
            \ recovery phrase, a derivation path, and an optional passphrase. \n\n\
            Alternatively, you can derive a public key with a private key."
          type: string
      title: The response when listing the API key pairs
    GeneratePrivateKey:
      example:
        b58_private_key: 5UNBwP7bYMRZZeT5sENFZFaTQxwPFFhLsCKZVgicNDpB6uceSAS1qtfzGfQmAmPzM7Nf8P3b3sk2QUntY7huHhqS
        private_key:
        - 223
        - 170
        - 179
        - 221
        - 165
        - 191
        - 167
        - 243
        - 159
        - 10
        - 84
        - 192
        - 72
        - 106
        - 183
        - 78
        - 172
        - 176
        - 186
        - 93
        - 40
        - 181
        - 198
        - 55
        - 109
        - 52
        - 203
        - 131
        - 83
        - 175
        - 183
        - 44
        - 75
        - 198
        - 179
        - 199
        - 37
        - 156
        - 85
        - 149
        - 181
        - 161
        - 239
        - 36
        - 185
        - 202
        - 86
        - 63
        - 51
        - 210
        - 41
        - 10
        - 34
        - 230
        - 176
        - 38
        - 153
        - 219
        - 197
        - 85
        - 2
        - 197
        - 167
        - 89
      properties:
        private_key:
          description: |-
            A private key corresponds to exactly one public key address. A private key can be used to move assets out of the wallet and sign transaction with the corresponding public key.

            A private key is an array of integers (e.g.,   `[185,108,153,165,57,193,166,167,58,148,133,121,92,252,242,13,233,246,35,103,185,20,27,56,111,169,12,50,50,36,83,156,173,195,143,75,135,78,204,129,217,231,58,129,69,180,185,86,119,43,200,193,94,112,31,135,68,128,207,26,85,150,68,181]`).

            <a href="https://solflare.com" target="_blank">Solflare</a> is a popular wallet interface on Solana that allows you to export your private key in this format.
          type: object
        b58_private_key:
          description: |-
            A private key corresponds to exactly one public key address. A private key can be used to move assets out of the wallet and sign transaction with the corresponding public key.

            A base58-encoded private key is a base58-encoded version of the typical private key. It is represented as a string (e.g., `4waBTVeAVWEAczSdx36uMrR19668ACgQDs7r386vrUes3UCzvXCQ2FPSCVGb1zJrwcULgpNzgABreyQaWSpGBwfx`).

            <a href="https://phantom.app" target="_blank">Phantom</a> is a popular wallet interface on Solana that allows you to export your private key in this format.
          type: string
    SecretRecoveryPhrase:
      example:
        secret_recovery_phrase: enter remember useful material soccer sense solution
          alarm crowd drift burst tattoo
        derivation_path: m/44/501/0/0
        passphrase: ""
      properties:
        secret_recovery_phrase:
          description: "The twelve word phrase that can be used to derive many public\
            \ key addresses (e.g., bottom army bless castle alter habit dish embody\
            \ child flame smooth zone).\n\nTo derive a public key, you need a secret\
            \ recovery phrase, a derivation path, and an optional passphrase. \n\n\
            Alternatively, you can derive a public key with a private key."
          type: string
        derivation_path:
          default: m/44/501/0/0
          description: |-
            Derivation paths are used to derive the public key from the secret recovery phrase. Only certain paths are accepted.

            If you provide the empty string "" as the value for the derivation path, then we will derive your public key with the same behavior as the default behavior of the Solana CLI.

            By default, we use "m/44/501/0/0". This is the path that the Phantom and Sollet wallets use.

            You can also arbitrarily increment the default path ("m/44/501/0/0") to generate more wallets (e.g., "m/44/501/0/1", "m/44/501/0/2", ... AND/OR "m/44/501/1/0", "m/44/501/2/0", ...).

            Phantom's Wallet increments the first digit (e.g., "m/44/501/0/0", "m/44/501/1/0", "m/44/501/2/0", ...) to generate more public key addresses.

            The SolFlare recommended path is "m/44/501/0".

            To learn more about derivation paths, check out <a href="https://learnmeabitcoin.com/technical/derivation-paths" target="_blank">this tutorial</a>.
          type: string
        passphrase:
          default: ""
          description: 'PASSPHRASE != PASSWORD. This is NOT your Phantom password
            or any other password. It is an optional string you use when creating
            a wallet. This provides an additional layer of security because a hacker
            would need both the secret recovery phrase and the passphrase to access
            the output public key. By default, most wallet UI extensions do not use
            a passphrase. (You probably did not use a passphrase.) Limited to 500
            characters. '
          type: string
      required:
      - secret_recovery_phrase
    PrivateKey:
      properties:
        private_key:
          description: |-
            A private key corresponds to exactly one public key address. A private key can be used to move assets out of the wallet and sign transaction with the corresponding public key.

            A private key is an array of integers (e.g.,   `[185,108,153,165,57,193,166,167,58,148,133,121,92,252,242,13,233,246,35,103,185,20,27,56,111,169,12,50,50,36,83,156,173,195,143,75,135,78,204,129,217,231,58,129,69,180,185,86,119,43,200,193,94,112,31,135,68,128,207,26,85,150,68,181]`).

            <a href="https://solflare.com" target="_blank">Solflare</a> is a popular wallet interface on Solana that allows you to export your private key in this format.
          type: object
      required:
      - private_key
    B58PrivateKey:
      properties:
        b58_private_key:
          description: |-
            A private key corresponds to exactly one public key address. A private key can be used to move assets out of the wallet and sign transaction with the corresponding public key.

            A base58-encoded private key is a base58-encoded version of the typical private key. It is represented as a string (e.g., `4waBTVeAVWEAczSdx36uMrR19668ACgQDs7r386vrUes3UCzvXCQ2FPSCVGb1zJrwcULgpNzgABreyQaWSpGBwfx`).

            <a href="https://phantom.app" target="_blank">Phantom</a> is a popular wallet interface on Solana that allows you to export your private key in this format.
          type: string
      required:
      - b58_private_key
    Wallet:
      description: |
        The wallet authentication information used to sign and submit the transaction.  Click the `>` arrow next to "wallet" on the left to see more details. See our Security section <a href="#section/Security">here</a>.
      oneOf:
      - $ref: '#/components/schemas/SecretRecoveryPhrase'
      - $ref: '#/components/schemas/PrivateKey'
      - $ref: '#/components/schemas/B58PrivateKey'
    GetPublicKeyRequest:
      example:
        wallet:
          secret_recovery_phrase: fire owner display success half rescue pledge oval
            foam gossip window once
          derivation_path: m/44/501/0/0
          passphrase: water
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
      required:
      - wallet
    PublicKey:
      example:
        public_key: GoUhxkKRiy8psWcr1csF1mbuDsfNd28JZXNHMQ5BSBnc
      properties:
        public_key:
          type: string
      required:
      - public_key
      type: object
    FeePayerWallet:
      description: "If you do NOT provide a wallet here, the fee payer of the transaction\
        \ will be the `wallet` you provide or the `sender_public_key`.\n      \nIf\
        \ you do provide a wallet, then the `fee_payer_wallet` will pay the fees of\
        \ the transaction and any costs associated with creating a new associated\
        \ token account (only if necessary; approx. 0.002 SOL when necessary). A new\
        \ account is necessary if you are sending an NFT or SPL token to a user that\
        \ has not received the same NFT or one of the SPL tokens before (thus, a new\
        \ associated token account is needed)."
      oneOf:
      - $ref: '#/components/schemas/SecretRecoveryPhrase'
      - $ref: '#/components/schemas/PrivateKey'
      - $ref: '#/components/schemas/B58PrivateKey'
    TransferRequest:
      example:
        wallet:
          secret_recovery_phrase: fire owner display success half rescue pledge oval
            foam gossip window once
        token_address: CK1LHEANTu7RFqN3XMzo2AnZhyus2W1vue1njrxLEM1d
      properties:
        recipient_address:
          description: The public key address of the recipient to whom you want to
            send a token or NFT
          type: string
        wallet:
          $ref: '#/components/schemas/Wallet'
        token_address:
          description: |
            If you're transfering an NFT, supply the `mint` (the address of the mint) for the `token_address`. If you're transfering a token, supply the token address found on the explorer (e.g., see `SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt` for <a href="https://explorer.solana.com/address/SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt" target="_blank">Serum Token</a>) for the `token_address`. If you're transferring SOL, do not supply a value for `token_address`.
          type: string
        network:
          default: devnet
          enum:
          - devnet
          - mainnet-beta
          type: string
        amount:
          default: "1"
          description: |-
            This value must be a string. What you provide here depends on if you are sending an NFT, an SPL token, or SOL.

            - NFT: This must be '1'.
            - SPL Token: This must be an integer in string format. To convert from what you see on a wallet UI (e.g., 1 ATLAS, 1 USDC) to an integer value, you have to multiply that value by 10^<i>x</i> where <i>x</i> is the number of decimals. For example, to transfer 0.2 USDC, if USDC uses 6 decimals, then the amount is 0.2 * 10^6 = 200000. You can get the number of decimals for a given SPL token <a href="#operation/solanaGetSPLToken">here</a>.
            - SOL: Supply this value denominated in SOL in a string format. This does not need to be an integer. For example, if you want to send 0.0005 SOL, then amount = "0.0005".
          type: string
        return_compiled_transaction:
          default: false
          description: |
            If `false`, we sign and submit the transaction (`wallet` is required in this case; do not provide a value for `sender_public_key`).  If `true`, we compile the transaction (either `wallet` or `sender_public_key` is required in this case; do not provide both).
          type: boolean
        sender_public_key:
          default: "null"
          description: |
            To understand the purpose of `sender_public_key` first note the following: There are two ways you can complete a transfer transaction: (1) we complete it for you with your `wallet` information or (2) we return the raw instruction data that you can sign and submit yourself (no private keys required).
            When you provide your `wallet` authentication, we are able to determine your wallet's public key, which is the sender public key of the transaction.
            When you are not providing your `wallet` as authentication, we still need the `sender_public_key` to be able to return the compiled transaction. Thus, you provide `sender_public_key` only if you are not providing `wallet` authentication information and you are returning a compiled transaction.
            You will receive an error if you provide both `wallet` and `sender_public_key`. You will receive an error if you provide neither `wallet` nor `sender_public_key`.
          type: string
        fee_payer_wallet:
          $ref: '#/components/schemas/FeePayerWallet'
      required:
      - recipient_address
      type: object
    TransferResponse:
      example:
        transaction_signature: 38jivwh89t38hkN4dS2M585NZFRHbsGfmnuFb2MVDwrfTXdvYBamQPRo7QQNGdx8mfYahfkUV6s822nH3K7ej5nj
      properties:
        transaction_signature:
          description: The signature of the transaction
          type: string
      type: object
    TransferResponseCompiled:
      example:
        b58_compiled_transaction: 7HigsMhUk7SN2cW3GaQsZ86WyVbR3id8xbPELatuhvXio3kYKbqj5jw3x69K2nxHx2murn56RpngeSsFVnmkhFp4oBk8jn5Frm7sAJBES1kxqxMMwaoTCTSM3ReMUDUQm1P7mbpqoBmaf9Z21pKEKA8dUMmatBG9PHjJf5CaL6Np7SFaMBnjeq8W8SAgWi24QMSr3sju4ZtMDqguZXWm6WESunwMengWE8HSLVfSLTEWYK6GS2QsR
        compiled_transaction:
        - 1
        - 1
        - 1
        - 4
        - 29
        - 205
        - 57
        - 150
        - 42
        - 213
        - 65
        - 12
        - 25
        - 150
        - 135
        - 62
        - 35
        - 196
        - 233
        - 175
        - 24
        - 155
        - 204
        - 168
        - 75
        - 12
        - 36
        - 253
        - 47
        - 241
        - 134
        - 90
        - 51
        - 130
        - 194
        - 136
        - 121
        - 239
        - 163
        - 213
        - 230
        - 16
        - 137
        - 176
        - 180
        - 69
        - 106
        - 51
        - 200
        - 194
        - 8
        - 119
        - 211
        - 158
        - 228
        - 142
        - 29
        - 64
        - 32
        - 220
        - 208
        - 35
        - 113
        - 150
        - 175
        - 122
        - 137
        - 8
        - 127
        - 136
        - 122
        - 194
        - 223
        - 10
        - 132
        - 244
        - 5
        - 186
        - 85
        - 172
        - 32
        - 234
        - 226
        - 128
        - 115
        - 127
        - 138
        - 169
        - 67
        - 227
        - 70
        - 170
        - 154
        - 79
        - 60
        - 157
        - 100
        - 207
        - 214
        - 209
        - 6
        - 221
        - 246
        - 225
        - 215
        - 101
        - 161
        - 147
        - 217
        - 203
        - 225
        - 70
        - 206
        - 235
        - 121
        - 172
        - 28
        - 180
        - 133
        - 237
        - 95
        - 91
        - 55
        - 145
        - 58
        - 140
        - 245
        - 133
        - 126
        - 255
        - 0
        - 169
        - 152
        - 93
        - 5
        - 155
        - 108
        - 35
        - 158
        - 6
        - 224
        - 54
        - 73
        - 165
        - 50
        - 99
        - 160
        - 15
        - 28
        - 214
        - 60
        - 127
        - 114
        - 136
        - 28
        - 105
        - 215
        - 227
        - 205
        - 16
        - 21
        - 39
        - 9
        - 227
        - 1
        - 3
        - 3
        - 1
        - 2
        - 0
        - 9
        - 3
        - 1
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
      properties:
        b58_compiled_transaction:
          description: A base58 encoded byte array in string representation. Really
            easy to submit to Phantom. See <a href="https://github.com/BL0CK-X/blockchain-api/blob/main/examples/tutorials/phantom_tutorials/transfer_solana.html"
            target="_blank">here</a> for an example on how to submit it to a Phantom
            wallet for signing.
          type: string
        compiled_transaction:
          description: An array of integers representing the bytes of the transaction
          type: object
      type: object
    DoubleTransferResponse:
      oneOf:
      - $ref: '#/components/schemas/TransferResponse'
      - $ref: '#/components/schemas/TransferResponseCompiled'
    ATAResponse:
      example:
        associated_token_address: CnW7tnQrfbSMkHYpvn5mtYw11qGpat6WM87D68cNT2hC
      properties:
        associated_token_address:
          description: The associated token address
          type: string
      required:
      - associated_token_address
      type: object
    AirdropRequest:
      example:
        recipient_address: recipient_address
      properties:
        recipient_address:
          description: The address to which to send the airdrop of 0.015 SOL
          type: string
      required:
      - recipient_address
      type: object
    BalanceRequest:
      example:
        public_key: GKNcUmNacSJo4S2Kq3DuYRYRGw3sNUfJ4tyqd198t6vQ
        network: mainnet-beta
        mint_address: EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
      properties:
        public_key:
          description: The public key address of the wallet
          type: string
        unit:
          default: lamport
          description: If you are retrieving the SOL balance, you can select whether
            to retrieve this in SOL or Lamport units (1 SOL = 1e9 Lamports).
          enum:
          - lamport
          - sol
          type: string
        network:
          default: devnet
          enum:
          - devnet
          - mainnet-beta
          type: string
        mint_address:
          default: "null"
          description: |-
            The mint address of the SPL token or NFT. If not provided, the balance returned is in SOL. Make sure to use the correct network.

            You can see the mint addresses of popular SPL tokens <a href="https://raw.githubusercontent.com/solana-labs/token-list/main/src/tokens/solana.tokenlist.json" target="_blank">here</a>.

            Some example mint addresses of SPL tokens:
            - USDC: EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
            - Mango: MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac
            - Serum: SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt
            - Raydium: 4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R
            - wSOL: So11111111111111111111111111111111111111112
            - ATLAS: ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx
          type: string
      required:
      - public_key
      type: object
    BalanceResponse:
      example:
        balance: 3.322105
        decimals: 6
        integer_balance: 3322105
        network: mainnet-beta
      properties:
        balance:
          description: The balance of the token in the wallet
          type: number
        integer_balance:
          description: Not included if retreiving SOL balance
          type: number
        decimals:
          description: Not included if retreiving SOL balance. Sometimes not included
            if the balance of the token is '0'.
          type: number
        network:
          enum:
          - devnet
          - mainnet-beta
          type: string
        unit:
          description: Not included if retreiving an SPL token/NFT balance
          enum:
          - lamport
          - sol
          type: string
      required:
      - balance
      - network
    ListTokensResponse:
      description: A list the wallet's of token positions
      example:
      - amount: "125000000000"
        decimals: 9
        mint_address: 4UuGQgkD3rSeoXatXRWwRfRd21G87d5LiCfkVzNNv1Tt
        token_address: 5mSHqsF7hdQMRsnADXFy2m39G2oNHQEBLg1dFhCrTqe8
        ui_amount: 125
      - amount: "10090000000000000000"
        decimals: 9
        mint_address: 5jv9QU2SHehzt1Rya7hi8eEdoBMX6a98uWjXFSwWXspT
        token_address: EASFLGGD8ZCwB2nux8WZtnRGF85eC3kETa81SYB5K6gW
        ui_amount: 10090000000
      - amount: "3"
        decimals: 0
        mint_address: FRbqQnbuLoMbUG4gtQMeULgCDHyY6YWF9NRUuLa98qmq
        token_address: 3tTXfF2GWxDFnvueTFMbBagtcgzXgX9cuc8QcASFD3j8
        ui_amount: 3
      - amount: "5000"
        decimals: 0
        mint_address: H32T9DYWTt83n9iRFyrq9TEGa3LUDFgWnFKrMvYS4JUf
        token_address: Zd23L1RCzKApSzyLhwMZeZ5ASokgbthQhyQ5QFG7U74
        ui_amount: 5000
      - amount: "3322105"
        decimals: 6
        mint_address: EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
        token_address: 29TwF9mm2ZfrcjRiV3PCRQmgYzL95HJJhaUairYmWLJC
        ui_amount: 3.322105
      - amount: "46"
        decimals': 6
        mint_address: MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac
        token_address: GizuDGzHpZFFJTjRKG57LFmzb5AooBiceugbmDPgsb5S
        ui_amount: 4.6E-5
      items:
        properties:
          amount:
            description: The balance. To get the balance without decimals, divide
              by 10^x where x = the number of decimals
            type: string
          decimals:
            type: number
          mint_address:
            description: The mint address of the SPL token
            type: string
          token_address:
            description: The token address
            type: string
          ui_amount:
            description: The amount to display (the actual balance divided by 10^x,
              where x = the number of decimals)
            type: string
        type: object
      type: array
    ListTransactionsResponse:
      description: A list the wallet's of token positions
      example:
      - jLmcxEjRppamX1b98PRUN1Sutmqn6HD1HugP5VPoib7AruFC2D5pyh7UPHZ9FUBww6Q5SRagoqjQTG51tcGtDDW
      - 5QEdoVR7u5dPLs8A2GLpF2F4f8rYKqJwZjAFsgNRPdgsfDuo1gRBQwCQPqpZk5aYM7eSg1uuq8cdmH5bH68GrFJ5
      - 5mdZKo9tsJijncaiVmxqVfg7PUUpk5pHebyp9ZcM53kb4RWnBqnCX18GvoQhEsYywhFkHzrXZEQksLuWhvgso4HJ
      - 2DzKmgTFZGH1aFue8wproBNZ3WGULxV6MaK9zTMZjbnL8hv3gKQ9fjpQAFAQXWeryYtgnTUfha3v4dfwMcpRcD6U
      - vo19EnE97N2yhxwZaDSQjZFNsft7LxPBhbLeRnoVBGTam9SP91hWpBDvQ6oStkEhgXAvKDdz3poUCypU4jmpkFs
      - 22D1YEiLn8oArCLWU23hDtRk4kbZmSUQkHwXk88eDrKLYkx5zWCeDZ8UadLaa1AMkwy6jNHiDo4mVRfqX4nmUrB3
      - 3R6QjGex1TRhs62pvU78Ccg5gSNCox5K7qxemKM3zaxGWzkfJ7DoWwW4YzjSrh7ZDCxRjm9AXbfvu8Pj9w3Bs2SH
      items:
        description: |
          The signature for the transaction. You can call `solanaGetTransaction` to get more details: https://docs.blockchainapi.com/#operation/solanaGetTransaction
        type: string
      type: array
    NFT:
      example:
        data:
          creators:
          - HuAiZg55P557gdjr5jkq79YdMe9sbdHuPj5UN21XuSyK
          - 5FzddvKbxE54KEg2WoeNiGWJYAUBabKVFg2MVCSacWiJ
          name: 'Vox Punks Club #966'
          seller_fee_basis_points: 500
          share:
          - 0
          - 100
          symbol: ""
          uri: https://arweave.net/_Y8tETU3FbAFZSM1wXNeWPweWwrW9K6oSF1SYi_bH9A
          verified:
          - 1
          - 1
        is_mutable: true
        mint: EEr5yQpNXf7Bru6Rt5podx56HGW9CEehXqgRGh2wa71w
        primary_sale_happened: true
        update_authority: 5FzddvKbxE54KEg2WoeNiGWJYAUBabKVFg2MVCSacWiJ
      properties:
        data:
          $ref: '#/components/schemas/NFT_data'
        is_mutable:
          type: boolean
        mint:
          description: |
            The public key address of the NFT
          type: string
        primary_sale_happened:
          type: boolean
        update_authority:
          description: |
            A public key address that is usually that of the person who minted the NFT
          type: string
        seller_fee_basis_points:
          type: number
        mint_secret_recovery_phrase:
          type: string
        explorer_url:
          type: string
      type: object
    ListNFTsResponse:
      example:
        nfts_owned:
        - 9ztsoyPz96SDUUfX4yh1QnxN9Yv2TAAKcY2dUuYcgtsv
        - 5z2JAGTCDJ4KpzBDoFrapWGWcwKAjoZ2rkNqi5bvt9C3
        nfts_metadata:
        - data:
            creators:
            - 6NTtQY7ErW6tQVYGt6cpbcw3g7JwGrVSWmkMAJva8nM3
            - GKCE4m2Bten4ygPAn4hNJGsFhkn1hiTFj7fEFMcbDPbP
            name: 'Mechanic Wolf #1331'
            seller_fee_basis_points: 600
            share:
            - 0
            - 100
            symbol: MCW
            uri: https://arweave.net/Y1t2iok4cPcY5_vPbwkmPQwkkqWdwcusGK13eHttF6U
            verified':
            - 1
            - 0
          explorer_url: https://explorer.solana.com/address/9ztsoyPz96SDUUfX4yh1QnxN9Yv2TAAKcY2dUuYcgtsv
          is_mutable: true
          mint: 9ztsoyPz96SDUUfX4yh1QnxN9Yv2TAAKcY2dUuYcgtsv
          primary_sale_happened: true
          update_authority': GKCE4m2Bten4ygPAn4hNJGsFhkn1hiTFj7fEFMcbDPbP
        - data:
            creators:
            - 7xRUqdB8WHiqMtXQm5eSNk4sM5nPhm68LJiC33Hr73vE
            - HtpFSATcbbdGkDFXiExJtxBG1K1BpLrUVoxzSEwxuPgw
            name: 'Millionaire Ape #647'
            seller_fee_basis_points: 750
            share:
            - 0
            - 100
            symbol: YC
            uri: https://arweave.net/Zp3CwpG_gu_FnShbMJ4gjSh9OKrOSpw-TuYl3lSTwzE
            verified:
            - 1
            - 0
          explorer_url: https://explorer.solana.com/address/5z2JAGTCDJ4KpzBDoFrapWGWcwKAjoZ2rkNqi5bvt9C3
          is_mutable: true
          mint: 5z2JAGTCDJ4KpzBDoFrapWGWcwKAjoZ2rkNqi5bvt9C3
          primary_sale_happened: true
          update_authority: HtpFSATcbbdGkDFXiExJtxBG1K1BpLrUVoxzSEwxuPgw
      properties:
        nfts_owned:
          description: A list of mint addresses represented by a string
          items:
            description: A mint address
            type: string
          type: array
        nfts_metadata:
          description: A list of the dictionaries, where each dictionary is an NFT's
            metadata
          items:
            $ref: '#/components/schemas/NFT'
          type: array
      type: object
    NFTMintRequest:
      example:
        wallet:
          secret_recovery_phrase: fire owner display success half rescue pledge oval
            foam gossip window once
        nft_name: Super Musk
        nft_symbol: MUSK
        nft_description: Buy this image of Super Musk!
        nft_url: https://static01.nyt.com/images/2021/03/11/business/00china-musk/00china-musk-superJumbo.jpg
        nft_metadata: '{"cleverness": 100, "data": ["foo", {"bar": ["baz", null, 1.0,
          2]}]}'
        nft_upload_method: S3
        is_mutable: true
        is_master_edition: true
        seller_fee_basis_points: 100
        creators: '["31LKs39pjT5oj6fWjC3F76dHWf9489asCthmgj8wu7pj", "G17UmNGnMJ851x3M1JXocgpft1afcYedjPuFpo1ohhCk"]'
        share: '[40, 60]'
        network: devnet
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
        nft_name:
          default: ""
          description: The name of the token. Limited to 32 characters. Stored on
            the blockchain.
          type: string
        nft_symbol:
          default: ""
          description: The symbol of the token. Limited to 10 characters. Stored on
            the blockchain.
          type: string
        nft_description:
          default: ""
          description: |
            The description of the token. Limited to 2000 characters. Not stored on the blockchain.  This is stored in S3 in a bucket we own, and the link to that file is stored on the blockchain.  If you provide your own link, the link is also stored in that S3 file, which is publicly accessible. However, if you choose the NFT upload method "LINK" instead of "S3", then we upload the link you  provide for nft_url directly to the blockchain, and S3 is not used at all. Thus, when you provide the "LINK" option, the value nft_description is ignored and not used. The Metaplex API does not provide functionality to store any data about your NFT besides a URL.
          type: string
        nft_url:
          default: ""
          description: |
            The URL you provided. Limited to 200 characters. This does not need to be a valid URL. Whether or not this is  stored on the blockchain depends on which upload method you choose. If you choose LINK, then this is stored on the  blockchain directly. If you choose S3, then this link is embedded in a public S3 text file that also contains the metadata, the name,  the symbol, and the description of the NFT.
          type: string
        nft_metadata:
          default: '{}'
          description: |
            Any data you provide. Must be a string and properly encoded json. Will be viewable on S3. Limited to 2000 bytes. Not stored on the blockchain.  This is stored in S3 in a bucket we own, and the link to that file is stored on the blockchain.  If you provide your own link, the link is also stored in that S3 file, which is publicly accessible. However, if you choose the NFT upload method "LINK" instead of "S3", then we upload the link you  provide for nft_url directly to the blockchain, and S3 is not used at all. Thus, when you provide the "LINK" option, the value nft_metadata is ignored and not used. The Metaplex API does not provide functionality to store any data about your NFT besides a URL.
          type: string
        nft_upload_method:
          default: S3
          description: |
            When you choose S3, all of the nft_description, nft_name, nft_symbol, nft_metadata, and nft_url are put into a json dictionary and uploaded to S3 as a text file.  This is uploaded to an AWS S3 bucket we own, and is an option we provide at no charge. The S3 link to this file is stored on the NFT on the blockchain.
              When you choose LINK, the nft_url you provide is stored on the blockchain, and the nft_metadata and nft_description are ignored and not stored anywhere. S3 is then NOT used.
          enum:
          - S3
          - LINK
          type: string
        is_mutable:
          default: true
          description: |
            Indicates whether or not the NFT created is mutable. If mutable, the NFT can be updated later. Once set to immutable, the NFT is unable to be changed.
          type: boolean
        is_master_edition:
          default: true
          description: |
            Whether or not the NFT is a master edition NFT. Saves about 0.001 SOL in transaction costs when set to false.
          type: boolean
        seller_fee_basis_points:
          default: 0
          description: |
            Valid values from 0 to 10000. Must be an integer.  Represents the number of basis points that the seller receives as a fee upon sale.  E.g., 100 indicates a 1% seller fee. Seller does not receive a fee when "primary_sale_has_happened" is set to true.  Will be set to false after first sale has occurred.
          type: number
        creators:
          default:
          - The Public Key Corresponding to The Seed Phrase, Path, and Passphrase
            Provided
          description: |
            A JSON encoded string representing an array / list.  The designated creators of the NFT. Length of the creator list must match length of the list of share.  Valid lengths of the list range from 1 to 5. Each item in the list must be a valid public key address.    Only the public key corresponding to the seed phrase provided will be marked as verified. Any other creators supplied will be marked as unverified.
          items:
            type: string
          type: array
        share:
          default:
          - 100
          description: |
            A JSON encoded string representing an array / list.  The share of the royalty that each creator gets. Valid values range from 0 to 100.  Sum of the values must equal 100.  Only integer value accepted. Length of the share list must match length of the list of creators.
          items:
            type: integer
          type: array
        mint_to_public_key:
          default: The public key of the wallet provided
          description: |
            Assign ownership of the NFT to the public key address given by `mint_to_public_key`
          type: string
        network:
          default: devnet
          description: "This determines which network you choose to run the API calls\
            \ on. We recommend first testing on the devnet, because minting an NFT\
            \ costs a little above 0.01 SOL, which is about $1.60 at the time of this\
            \ writing.  When you run on the mainnet-beta, each successful call will\
            \ deduct approximately that much. When you run on the devnet, that amount\
            \ is deducted from a simulated amount, so you are not paying with real\
            \ SOL. To get SOL on the devnet,\n  airdrop SOL to this address using\
            \ the CLI. Keep in mind that you can only do this every so often. If you\
            \ are rate-limited, consider using a VPN and trying again, or just waiting.\
            \ To get SOL on the mainnet-beta, you \n  must transfer real SOL to this\
            \ account from another wallet (e.g., from another wallet you own, from\
            \ an exchange, etc.). We hope to make this process easier in the future,\
            \ and if you have any suggestions, please add them \n  as an issue on\
            \ our <a href=\"https://github.com/BL0CK-X/the-blockchain-api\" target=\"\
            _blank\">GitHub repository</a> for the API. To get a fee estimate, make\
            \ a GET requests to the <a href=\"#tag/Solana-NFT/paths/~1solana~1nft~1mint~1fee/get\"\
            >v1/solana/nft/mint/fee endpoint</a> (details in sidebar).\n"
          enum:
          - devnet
          - mainnet-beta
          type: string
      required:
      - wallet
      type: object
    NFTMintErrorResponse:
      example:
        error: |
          Insufficient balance. You need 12500434 lamports, but you have 20.  If you are running on the devnet, see how to airdrop SOL to your wallet to get started. If you are  running on the mainnet, you will have to transfer real SOL to your wallet from an exchange, another  wallet or some other source. You can check your balance with our endpoint v1/solana/wallet/balance.
      properties:
        error:
          type: string
      title: A response error when minting an NFT
    NFTSearchRequest:
      example:
        name: Elon Musk
        name_search_method: exact_match
        symbol: Elo
        symbol_search_method: begins_with
        network: mainnet-beta
      properties:
        update_authority:
          description: The public key of the update authority of the NFT
          type: string
        update_authority_search_method:
          default: exact_match
          description: Only `exact_match` supported at this time
          enum:
          - exact_match
          type: string
        mint_address:
          description: The mint address of the NFT
          type: string
        mint_address_search_method:
          default: exact_match
          description: Only `exact_match` supported at this time
          enum:
          - exact_match
          type: string
        name:
          description: The name of the NFT
          type: string
        name_search_method:
          default: exact_match
          enum:
          - begins_with
          - exact_match
          type: string
        uri:
          description: The NFT's uri
          type: string
        uri_search_method:
          default: exact_match
          enum:
          - begins_with
          - exact_match
          type: string
        symbol:
          description: The symbol associated with the candy machine
          type: string
        symbol_search_method:
          default: exact_match
          enum:
          - begins_with
          - exact_match
          type: string
        network:
          default: devnet
          enum:
          - devnet
          - mainnet-beta
          type: string
      type: object
    NFTSearchResponse:
      example:
      - nft_metadata:
          data:
            creators:
            - F5Nrvo1Vn3J2uhVKYTxwx6j2vsq4m8wFj15smSmoTnz7
            - 567srSapKFaKmhpCXcQEDjsw9oBTSYLwpJ447ZmaWD4Z
            name: Elon Musk
            seller_fee_basis_points: 500
            share:
            - 0
            - 100
            symbol: ElonVerse
            uri: https://ipfs.io/ipfs/QmYrS4MhTz528ATfeNHXqhf5QnacdAJ2At1dkKZ7ULvYr3
            verified:
            - 1
            - 0
          is_mutable: true
          mint: 7cnQ9K6Xgckd28jMj14memHJhLpPGs7iofBYr4e9iHnS
          primary_sale_happened: true
          update_authority: 567srSapKFaKmhpCXcQEDjsw9oBTSYLwpJ447ZmaWD4Z
        pub_key_hash: GGrF8NjbSKWJHsbhBJLSdG35K9wfaWqZe1mQaPKQmuH9
      - nft_metadata:
          data:
            creators:
            - Cx1ngaJkFsRJQNDRtQJzLtyr56JHXr3Z3QHnP1qVdwhz
            - 567srSapKFaKmhpCXcQEDjsw9oBTSYLwpJ447ZmaWD4Z
            name: Elon Musk
            seller_fee_basis_points: 500
            share:
            - 0
            - 100
            symbol: ElonVerse
            uri: https://ipfs.io/ipfs/QmYrS4MhTz528ATfeNHXqhf5QnacdAJ2At1dkKZ7ULvYr3
            verified:
            - 1
            - 0
            is_mutable: true
            mint: Et7fwzBWVTP9wrN53N1GcToyTJR2kUQFjKvC4VzEXWzF
            primary_sale_happened: true
            update_authority: 567srSapKFaKmhpCXcQEDjsw9oBTSYLwpJ447ZmaWD4Z
        pub_key_hash: 14nn1oBHHB6oRNHMgLQdu7SFd3wqFW3NA7W3eGYQWMSt
      - nft_metadata:
          data:
            creators:
            - ETBTMwqTp2oWfdr7krxdtKM8cfGiL4d3yVz24sZvwGpR
            - 567srSapKFaKmhpCXcQEDjsw9oBTSYLwpJ447ZmaWD4Z
            name: Elon Musk
            seller_fee_basis_points: 500
            share:
            - 0
            - 100
            symbol: ElonVerse
            uri: https://ipfs.io/ipfs/QmYrS4MhTz528ATfeNHXqhf5QnacdAJ2At1dkKZ7ULvYr3
            verified:
            - 1
            - 0
            is_mutable: true
            mint: EehtKnwXy4hyB6vGBTAwnqvE3tNwQtiQPw1ebki3mR7R
            primary_sale_happened: true
            update_authority: 567srSapKFaKmhpCXcQEDjsw9oBTSYLwpJ447ZmaWD4Z
        pub_key_hash: cko2u862bb9JCp7MSgKhSToHgSXEUmr8MtHpnzpZ1UR
      properties:
        nft_metadata:
          $ref: '#/components/schemas/NFT'
        pub_key_hash:
          description: Use this to verify the NFT
          type: string
      type: object
    NFTOwnerResponse:
      example:
        nft_owner: 31LKs39pjT5oj6fWjC3F76dHWf9489asCthmgj8wu7pj
      properties:
        nft_owner:
          description: The public key address of the wallet that has ownership over
            the provided NFT
          type: string
      required:
      - nft_owner
      type: object
    NFTMintFee:
      example:
        description: "We calculated the fee as follows: 10000000 + 1461600 + 534600\
          \ = 11996200 lamports = 0.0119962 SOL.  The largest portion of the fee (10000000\
          \ lamports) goes to the Metaplex protocol. They list their  fees on their\
          \ front page <a href=\"https://metaplex.com/\">here</a>. The rent fee (1461600\
          \ lamports) is the lifetime  fee needed to store the NFT on the blockchain.\
          \ This is paid to the validators of the network. You can see  how the rent\
          \ fees work <a href=\"https://docs.solana.com/implemented-proposals/rent\"\
          \ target=\"_blank\">here</a>. The transaction fee  (534600 lamports) is\
          \ what is paid to the validators for processing the three transactions that\
          \ compose  the minting of an NFT: creating an account, initializing the\
          \ mint, creating the metadata, and updating  the metadata. \n"
        fee: 11996200
      properties:
        nft_mint_fee_estimate_lamports:
          description: The estimate of the total fee for minting an NFT on Solana
          type: number
        description:
          description: A description of the fee that explains how it was estimated
          type: string
      title: The response when getting an estimated fee for minting a Solana NFT
    GetCandyMachineIDRequest:
      example:
        mint_address: AFPX7VQcezoxJsLWeA6zVTHLGtrjrY5SqgtmjD8jxvgx
        network: mainnet-beta
      properties:
        mint_address:
          description: The address of the NFT. NOT the mint authority address
          type: string
        network:
          default: devnet
          enum:
          - devnet
          - mainnet-beta
          type: string
      required:
      - mint_address
      type: object
    GetCandyMachineIDResponse:
      example:
        candy_machine_id: FmkrvXRenCGtwBHw3VtBcExp8eTdnau97upaewF4GUEX
        candy_machine_contract_version: v1
      properties:
        candy_machine_id:
          description: The ID of the candy machine that minted the NFT
          type: string
        candy_machine_contract_version:
          description: Whether or not this corresponds to candy machine v1, candy
            machine v2, or a Magic Eden candy machine.
          enum:
          - v1
          - v2
          - magic-eden-v1
          type: string
      type: object
    GetNFTListingResponse:
      example:
        exchange: solsea
        exchange_readable: SolSea
        listing_transaction_signature: 4qXMwWbrftjt33Rz7kqnUjGc76rokHdHYxFV89UwQLVYV7RvYzEraAo1Ly4Ra4QHnXqfPCsToKQzC2tGmDYrUYqY
        mint_address: 7GA16mQup7ESJbaD6n49VCwVG9kRkyQDzWKhBSLjbYqr
        price: 1000000000
        seller: 2FuQEmss657G89eJBe5mKX724qi1rfu6bUeUvGZQB2Jj
      properties:
        exchange:
          description: |
            The ID of the exchange where the NFT is listed
          enum:
          - solsea
          type: string
        exchange_readable:
          description: |
            A readable version of the exchange ID
          type: string
        listing_transaction_signature:
          description: |
            The signature of the listing transaction
          type: string
        mint_address:
          description: |
            The mint address of the NFT
          type: string
        price:
          description: The price of the NFT in Lamports. Represented as an integer.
          type: number
        seller:
          description: The public key of the seller
          type: string
      type: object
    BuyRequest:
      example:
        nft_price: 10000000
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
        nft_price:
          description: |
            The number of lamports you are expecting to purchase the NFT for. We check the price of the NFT before  purchasing it to ensure that it matches your expectation.
            There are 1e9 (1 billion) Lamports in a SOL.
          example: 10000000
          type: number
      required:
      - nft_price
      - wallet
    BuyResponse:
      example:
        transaction_signature: 4r5LZb3u1gnwpw7RrposJL3iic5emt2rx9468xNvAeJKeQC2HAuCGvSwaSbVgWGmoa9BS2KJnQRMHZrfuTLrY8k9
      properties:
        transaction_signature:
          description: |
            The signature of the `buy` transaction
          type: string
      type: object
    ListRequest:
      example:
        nft_price: 10000000
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
        nft_price:
          description: " The number of lamports you are expecting to sell the NFT\
            \ for. \nThere are 1e9 (1 billion) Lamports in a SOL. \n\n Min price:\
            \ 1\n\n Max price: 18446744073709551615 "
          example: 10000000
          type: number
      required:
      - nft_price
      - wallet
    ListResponse:
      example:
        transaction_signature: 4qXMwWbrftjt33Rz7kqnUjGc76rokHdHYxFV89UwQLVYV7RvYzEraAo1Ly4Ra4QHnXqfPCsToKQzC2tGmDYrUYqY
      properties:
        transaction_signature:
          description: |
            The signature of the `list` transaction
          type: string
      type: object
    DelistRequest:
      example: {}
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
      required:
      - wallet
    DelistResponse:
      example:
        transaction_signature: 5Vv8sYgdYS9pDh4AgzspthR1mf1AfZkh4urm9emKywTiHS3N4Q3TikKkh3x9aAGJAGnxrHjx9TK1zaaBmA9NZxMr
      properties:
        transaction_signature:
          description: |
            The signature of the `delist` transaction
          type: string
      type: object
    NFTAnalyticsRequest:
      example:
        mint_addresses:
        - 2U9sJ1mD1Fk6gJZezLjM25YnVrvBiMfmpgpUNXFtsybe
        - 2i4VfzbimyNYCqLLarH9e4ZTqMLwSAwXBvUMvGPuazTU
        - BmR33Vpyd7FZc1AC9UFoJfqfT4YqLw1CCFBBQjBjZxXR
        - DeAZpg1sjh1ga7JKXHU3zLU3deTPescwsbrEpxmTLG1e
        start_time: 1643757115
        end_time: 1644966734
      properties:
        mint_addresses:
          description: The list of mint addresses. Each address must be a valid public
            key.
          example:
          - 2U9sJ1mD1Fk6gJZezLjM25YnVrvBiMfmpgpUNXFtsybe
          - 2i4VfzbimyNYCqLLarH9e4ZTqMLwSAwXBvUMvGPuazTU
          - BmR33Vpyd7FZc1AC9UFoJfqfT4YqLw1CCFBBQjBjZxXR
          - DeAZpg1sjh1ga7JKXHU3zLU3deTPescwsbrEpxmTLG1e
          items:
            description: A mint address
            type: string
          type: array
        start_time:
          description: |
            Response will not include transactions before `start_time`. Set this to `-1` in order to get the entire history we have stored.
          example: 1643757115
          type: number
        end_time:
          description: "Response will not include transactions after `end_time` \n"
          example: 1644966734
          type: number
      required:
      - mint_addresses
    NFTTransaction:
      example:
        block_time: 1644371872
        seller: EmioriB6Y5nLaz1NzQTZu1T5XxJjBVHAxy6SsX9wzWTw
        transaction_signature: 3EGfHHwxv935ULG3RXsj3PjHyJpMG1adzCQMs7ApgkMpfyyTFbpVzVnjMMBhFG2g15jrafDtVuiiTfR9Poc5mDfw
        exchange: magic-eden
        exchange_readable: magic-eden
        operation: list
        mint_address: mint_address
        buyer: 5tCqPe7XNWSNy8aNLbBcqaf5i28RuEH8onsCHsUsvYmn
      properties:
        block_time:
          description: |
            An epoch time stamp in UTC time that represents the time of the block where the transaction was processed
          example: 1644371872
          type: number
        exchange:
          description: The NFT exchange on which the transaction occurred
          enum:
          - solsea
          - magic-eden
          - alpha-art
          - digital-eyes
          - solanart
          - exchange-art
          example: magic-eden
          type: string
        exchange_readable:
          description: A readable version of the NFT exchange
          enum:
          - SolSea
          - Magic Eden
          - Alpha Art
          - Digital Eyes
          - Solanart
          - Exchange.art
          example: magic-eden
          type: string
        mint_address:
          description: |
            The mint address of the NFT
          type: string
        operation:
          description: The operation of the transaction
          enum:
          - buy
          - list
          - de_list
          - update_listing
          example: list
          type: string
        seller:
          description: The public key of the wallet that listed the NFT
          example: EmioriB6Y5nLaz1NzQTZu1T5XxJjBVHAxy6SsX9wzWTw
          type: string
        buyer:
          description: |
            The public key of the buyer. This only exists in `buy` transactions.
          example: 5tCqPe7XNWSNy8aNLbBcqaf5i28RuEH8onsCHsUsvYmn
          type: string
        transaction_signature:
          description: |
            The signature of the transaction. You can look up each transaction on explorer.solana.com
          example: 3EGfHHwxv935ULG3RXsj3PjHyJpMG1adzCQMs7ApgkMpfyyTFbpVzVnjMMBhFG2g15jrafDtVuiiTfR9Poc5mDfw
          type: string
      type: object
    NFTAnalyticsResponse:
      example:
        floor: 300000000
        transaction_history:
          "2U9sJ1mD1Fk6gJZezLjM25YnVrvBiMfmpgpUNXFtsybe": []
          "2i4VfzbimyNYCqLLarH9e4ZTqMLwSAwXBvUMvGPuazTU": []
          BmR33Vpyd7FZc1AC9UFoJfqfT4YqLw1CCFBBQjBjZxXR:
          - block_time: 1644371872
            exchange: magic-eden
            exchange_readable: Magic Eden
            mint_address: BmR33Vpyd7FZc1AC9UFoJfqfT4YqLw1CCFBBQjBjZxXR
            operation: de_list
            seller: EmioriB6Y5nLaz1NzQTZu1T5XxJjBVHAxy6SsX9wzWTw
            transaction_signature: 3EGfHHwxv935ULG3RXsj3PjHyJpMG1adzCQMs7ApgkMpfyyTFbpVzVnjMMBhFG2g15jrafDtVuiiTfR9Poc5mDfw
          - block_time: 1644372458
            exchange: magic-eden
            exchange_readable: Magic Eden
            mint_address: BmR33Vpyd7FZc1AC9UFoJfqfT4YqLw1CCFBBQjBjZxXR
            operation: list
            price: 300000000
            seller: EmioriB6Y5nLaz1NzQTZu1T5XxJjBVHAxy6SsX9wzWTw
            transaction_signature: 3KGD9p2mgEBbTBfC7BNJRvvbUQ9qLNhFUoY3vfz93hM87z6yfdvuRz9dqhqKrrPtXggpzUPcEytASXMNx5CfJaTM
          - block_time: 1644455774
            exchange: magic-eden
            exchange_readable: Magic Eden
            mint_address: BmR33Vpyd7FZc1AC9UFoJfqfT4YqLw1CCFBBQjBjZxXR
            operation: de_list
            seller: EmioriB6Y5nLaz1NzQTZu1T5XxJjBVHAxy6SsX9wzWTw
            transaction_signature: 2kHd4kHK3SRcYdrftJTKy79qseLyLMS74nPC4hDCq7bfWKUvUKAyZQh6Fn6xe2xkihYmLdiCGJNpDZ9TdmjbbcVM
          - block_time: 1644558212
            exchange: magic-eden
            exchange_readable: Magic Eden
            mint_address: BmR33Vpyd7FZc1AC9UFoJfqfT4YqLw1CCFBBQjBjZxXR
            operation: list
            price: 300000000
            seller: EmioriB6Y5nLaz1NzQTZu1T5XxJjBVHAxy6SsX9wzWTw
            transaction_signature: 32FwsXpbTbBsQmeRnGLPNJnq7ffFUwXUdZzfiKkkD29xLYTWBbDCQVMg4hDkfvgzvJFyuxQMEbZeeQ7JbJERg1h4
          DeAZpg1sjh1ga7JKXHU3zLU3deTPescwsbrEpxmTLG1e: []
        volume: 0
      properties:
        start_time:
          description: |
            The start time used in the API request.
        end_time:
          description: "The end time used in the API request. \n"
        transaction_history:
          $ref: '#/components/schemas/NFTAnalyticsResponse_transaction_history'
        floor:
          description: |
            The minimum active listing price for the collection in the given time period. The listing must have been processed before `end_time` and still active (not delisted or purchased) by `end_time` in order to affect the floor calculation.
          example: 1644964713
          type: number
        volume:
          description: |
            The sum of the sale prices for the given time period.
          example: 1644964713
          type: number
    NFTRecentTransactions:
      description: NFTs recent transactions
      items:
        $ref: '#/components/schemas/NFTTransaction'
      type: array
    CreateTestCandyMachineRequest:
      example:
        wallet:
          secret_recovery_phrase: fire owner display success half rescue pledge oval
            foam gossip window once
          derivation_path: m/44/501/0/0
          passphrase: ""
        network: devnet
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
        network:
          default: devnet
          enum:
          - devnet
          - mainnet-beta
          type: string
        candy_machine_contract_version:
          default: v2
          description: |
            The contract you want to use to create the candy machine. Note: Metaplex disabled the creation of `v1` candy machines on their smart contract, and so we no longer support the creation of `v1` test candy machines.
          enum:
          - v2
          type: string
        include_gatekeeper:
          default: false
          description: Whether or not to include a gatekeeper for testing purposes.
            Only applies to v2 candy machines.
          type: boolean
      required:
      - wallet
      type: object
    CreateTestCandyMachineResponse:
      example:
        candy_machine_id: G9CFGuYBeyyrpKBeRikFrZF5SiTKEU6PifA3Yh4a2huq
      properties:
        candy_machine_id:
          description: The ID of the candy machine created
          type: string
      required:
      - candy_machine_id
      type: object
    CandyMachineSearchRequest:
      example:
        nft_name: Elon
        nft_name_index: 44
        nft_name_search_method: begins_with
        network: mainnet-beta
      properties:
        update_authority:
          description: The public key of the update authority of the candy machine
          type: string
        update_authority_search_method:
          default: exact_match
          description: Only `exact_match` supported at this time
          enum:
          - exact_match
          type: string
        config_address:
          description: The public key of the configuration of the candy machine
          type: string
        config_address_search_method:
          default: exact_match
          description: Only `exact_match` supported at this time
          enum:
          - exact_match
          type: string
        uuid:
          description: |
            The alphanumeric string of length six that corresponds to the candy machine. This is NOT the candy machine ID.  This is the first six letters of the configuration address and is also used to identify the candy machine. An example is `4zKV6i`.
          type: string
        uuid_search_method:
          default: exact_match
          description: Only `exact_match` supported at this time
          enum:
          - exact_match
          type: string
        symbol:
          description: The symbol associated with the candy machine
          type: string
        symbol_search_method:
          default: exact_match
          enum:
          - begins_with
          - exact_match
          type: string
        nft_name:
          description: |
            The name of an NFT on the candy machine, minted or unminted. For example, to find The Solana Money Boys candy machine, you already know that each NFT is named "Solana Money Boy #0", "Solana Money Boy #1", and so on. So you could search with  nft_name="Solana Money Boy #0", nft_name_index=0, nft_name_search_method='exact_match', for example, which would return the candy machine ID. This also works with candy machines that are not live but are uploaded.
          type: string
        nft_name_index:
          default: "0"
          description: |
            The index of the NFT to check, e.g., the 2nd NFT would have an index of 1. We cannot search all NFTs on a candy machine currently, so you must search an NFT at a particular position, such as the first, second, and so on. In general, nft_name_index=0 works for most use cases.
          type: string
        nft_name_search_method:
          default: exact_match
          enum:
          - begins_with
          - exact_match
          type: string
        network:
          default: devnet
          enum:
          - devnet
          - mainnet-beta
          type: string
        candy_machine_contract_version:
          default: v1
          description: "The candy machine contract you want to search. \nIf you want\
            \ to search `v1` candy machines, set this to `v1`. If you want to search\
            \ `v2` candy machines. set this to `v2`.\n"
          enum:
          - v1
          - v2
          type: string
      type: object
    GetAllNFTsResponse:
      example:
        minted_nfts:
        - nft_metadata:
            data:
              creators:
              - FmkrvXRenCGtwBHw3VtBcExp8eTdnau97upaewF4GUEX
              - 5hybnoWHp7ruUizgKoxSviJrGfgBLLxzybZosQoHhK6C
              name: 'God Particle #0078'
              seller_fee_basis_points: 500
              share:
              - 0
              - 100
              symbol': GP
              uri: https://arweave.net/GIVhsoTr7Phcs4AZxqkVZZ-MToupqK-NRYLVw9yTdLk
              verified:
              - 1
              - 0
            is_mutable: true
            mint: TqQvdc5USoG5snWk75YiwDTPTLJe8U1BR7pSbhDRmUS
            primary_sale_happened: true
            update_authority: 5hybnoWHp7ruUizgKoxSviJrGfgBLLxzybZosQoHhK6C
          pub_key_hash: G7EBE41G3yv2JJJGPzw6HQr6hqzaNtythGJD4Af97fec
        unminted_nfts:
        - name: 'God Particle #3123'
          uri: https://arweave.net/vNw7FWhtkgbNr7uPh9tgjIfH7ueN9EXV7X_qxdUn1dM
        all_nfts:
        - name: 'God Particle #3123'
          uri: https://arweave.net/vNw7FWhtkgbNr7uPh9tgjIfH7ueN9EXV7X_qxdUn1dM
      properties:
        minted_nfts:
          description: The minted NFTs. Only filled in for `v1` candy machines. Left
            empty for `v2`.
          items:
            $ref: '#/components/schemas/GetAllNFTsResponse_minted_nfts'
          type: array
        unminted_nfts:
          description: The unminted NFTs. Only filled in for `v1` candy machines.
            Left empty for `v2`.
          items:
            $ref: '#/components/schemas/GetAllNFTsResponse_unminted_nfts'
          type: array
        all_nfts:
          description: The list of all NFTs. Filled in for both `v1` and `v2` NFTs.
          items:
            $ref: '#/components/schemas/GetAllNFTsResponse_unminted_nfts'
          type: array
        accurate:
          description: "Whether or not the division of NFTs among minted and unminted\
            \ is accurate. If it is not accurate, then it is possible that NFTs have\
            \ been included in the `minted` list that are not actually minted. If\
            \ it is accurate, then the split of  minted and unminted is correct. `v1`\
            \ candy machines always return a correct minted/unminted split. \n"
          type: boolean
      type: object
    GetCandyMetadataRequest:
      example:
        candy_machine_id: FmkrvXRenCGtwBHw3VtBcExp8eTdnau97upaewF4GUEX
        network: mainnet-beta
        candy_machine_contract_version: v1
      properties:
        candy_machine_id:
          description: |
            The ID of the candy machine. This is the same as `config_address` for `v2` candy machines (supply either).
          type: string
        config_address:
          description: |
            The configuration address of the candy machine. This is the same as `candy_machine_id` for `v2` candy machines (supply either).
          type: string
        uuid:
          description: |
            The uuid of the candy machine. This is an alphanumeric string of length six (e.g., HpVdfP), which corresponds to the first six characters of the config_address.
          type: string
        network:
          default: devnet
          enum:
          - devnet
          - mainnet-beta
          type: string
        candy_machine_contract_version:
          default: v1
          description: |
            The candy machine contract of the candy machine for which you are retrieving the metadata.
            If you are providing `v1` candy machine ID, set this to `v1`. If you are providing `v2` candy machine ID, set this to `v2`. If you don't know which version your candy machine is, check out <a href="#operation/solanaGetAccountIsCandyMachine">this endpoint</a>.
          enum:
          - v1
          - v2
          type: string
      type: object
    GetCandyMetadataResponse:
      example:
        authority: 5hybnoWHp7ruUizgKoxSviJrGfgBLLxzybZosQoHhK6C
        bump: 255
        creators:
        - address: 5hybnoWHp7ruUizgKoxSviJrGfgBLLxzybZosQoHhK6C
          share: 100
        candy_machine_id: 8BG7YY2tHagJz6xdYmXwHUNxaUKSzQyafr4Nsa2PmyeT
        config_address: HpVdfPyqfTzVLprw9UdVH94QJeTB3HEdD1bFwxR46my6
        go_live_date: 4481031600
        is_mutable: true
        items_available: 3125
        items_redeemed: 125
        max_number_of_lines: 3125
        max_supply: 0
        price: 250000000
        retain_authority: true
        seller_fee_basis_points: 500
        symbol: GP
        token_mint: null
        uuid: HpVdfP
        wallet: 5hybnoWHp7ruUizgKoxSviJrGfgBLLxzybZosQoHhK6C
      properties:
        authority:
          description: The update authority of the candy machine
          type: string
        bump:
          type: number
        candy_machine_id:
          description: |
            The ID of the candy machine
          type: string
        config_address:
          description: |
            The configuration public key address of the candy machine
          type: string
        creators:
          items:
            $ref: '#/components/schemas/GetCandyMetadataResponse_creators'
          type: array
        go_live_date:
          description: |
            The unix timestamp of the start date of the candy machine
          type: number
        is_mutable:
          type: boolean
        items_available:
          description: |
            The number of NFTs available for mint from the candy machine
          type: number
        items_redeemed:
          description: |
            The number of NFTs minted already from the candy machine
          type: number
        max_number_of_lines:
          type: number
        max_supply:
          type: number
        price:
          description: |
            The price in Lamports for minting an NFT from the candy machine. 1e9 Lamport  = 1 SOL
          type: number
        retain_authority:
          type: boolean
        seller_fee_basis_points:
          description: |
            The royalty the creators receive on each sale after the primary sale (the initial minting) (denominated in basis points (e.g., 75 basis points = 0.75%))
          type: number
        symbol:
          type: string
        token_mint:
          type: string
        uuid:
          description: The uuid of the candy machine
          type: string
        wallet:
          description: |
            The public key address of the wallet that recevies the proceeds from NFT mints
          type: string
      type: object
    GetCandyMetadataErrorResponse:
      example:
        error: "Unknown error. Possible issues: \n  - You gave an invalid candy machine\
          \ ID.\n  - You used the wrong network.\n"
      properties:
        error:
          type: string
    MintNFTRequest:
      example:
        wallet:
          secret_recovery_phrase: fire owner display success half rescue pledge oval
            foam gossip window once
          derivation_path: m/44/501/0/0
          passphrase: ""
        network: devnet
        config_address: 9zK91gUYTcdnqDa9iEnjz2ZNEPbQkCgBrx2JM9tfNMtt
        candy_machine_contract_version: v2
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
        config_address:
          description: |
            The config address of the candy machine. You can retrieve this if you have the candy machine ID using <a href="#operation/solanaGetCandyMachineDetails">this endpoint</a> and retrieving the `config_address` from the response.  A candy machine ID is the same thing as a configuration address for v2 candy machines.
          type: string
        network:
          default: devnet
          enum:
          - devnet
          - mainnet-beta
          type: string
        candy_machine_contract_version:
          default: v1
          description: |
            The candy machine contract of the candy machine from which you're minting.
            If you are minting from a `v1` candy machine ID, set this to `v1`. If you are minting from a `v2` candy machine ID, set this to `v2`.
            If you don't know which the version of your candy machine, check out <a href="#operation/solanaGetAccountIsCandyMachine">this endpoint</a>.
          enum:
          - v1
          - v2
          type: string
      required:
      - config_address
      - wallet
      type: object
    MintNFTResponse:
      example:
        transaction_signature: 5ag74sGQJTpPFtsSPt4ZCBXCx6c1d3Y46wgadLHgrmXdsduyAE7KzZ5HePbqGi1gD84KHXwdcCge6GTH5TmA2opr
      properties:
        transaction_signature:
          description: "The signature of the transaction. Just because this is returned\
            \ does not mean it was successful. \nTo determine if the mint was successful,\
            \ use this Gist: https://gist.github.com/joshwolff1/298e8251e43ff9b4815028683b1ca17d\n"
          type: string
      type: object
    MintNFTErrorResponse:
      example:
        error: "Unknown error. Possible issues: \n  - No more minting available.\n\
          \  - Your address doesn't have enough SOL for the transactions.\n  - You\
          \ gave an invalid candy machine ID.\n"
      properties:
        error:
          type: string
    Group:
      description: |
        A group is a group of endpoints.
      properties:
        section_name:
          description: |
            The name of the section under which this group is listed. A section contains several groups.
          type: string
        group_name:
          description: |
            The name of the group
          type: string
        group_description:
          description: |
            The description of the group
          type: string
    ProjectCreateRequest:
      description: |
        You can change any of these parameters after creating the project. None of these parameters are required.
      example:
        project_name: Serum Market Insights
        project_description: |
          This API provides several insights into serum markets including prices, momentum, and other activity.
        contact_email: info@blockchainapi.com
        groups:
        - section_header: Trading
          group_name: Price Routing
          group_description: |
            This API returns the best price routes for your swap.
      properties:
        project_name:
          description: |
            The name of the mini-API. This will be shown at the top of the mini-API's documentation.
          type: string
        project_description:
          description: |
            The description of the mini-API. This will be shown at the top of the mini-API's documentation, below the title.
          type: string
        contact_email:
          description: |
            The email where users of your mini-API can contact you. This will be shown at the top of the mini-API's documentation.
          type: string
        groups:
          description: "A list of groups. A section contains groups, and groups contain\
            \ API endpoints. \n"
          items:
            $ref: '#/components/schemas/Group'
          type: array
    ParameterSpecification:
      example:
        type: string
        name: mint_address
        description: The mint address of the NFT
        required: true
      properties:
        type:
          description: The type of the parameter
          enum:
          - string
          - number
          - boolean
          - array
          type: string
        name:
          description: The name of the parameter
          type: string
        description:
          description: The name of the parameter
          type: string
        required:
          description: Whether or not this parameter is required
          type: boolean
    Endpoint:
      example:
        readable_name: Get an NFT's rarity
        version: 1.0.3
        operation_id: getNFTRarity
        path: nft/rarity
        project_id: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        summary: Get rarity
        description: This endpoint allows you to get the rarity of an NFT. It will
          automatically determine the collection and calculate the rarity based off
          of its attributes.
        credits: 5
        input_specification:
        - type: string
          name: mint_address
          description: The mint address of the NFT
          required: true
        input_examples:
        - mint_address: D1NLfN6kfks5KRHAE66ti2qgmAtq9wqxwWdWdpbwm6p3
        output_specification:
        - type: string
          name: rarity
          description: The rarity of the NFT given the collection
          required: true
        output_examples:
        - rarity: 0.01
        group_name: NFT Rarity
      properties:
        project_id:
          description: |
            The ID of the project. This is auto-generated upon project creation and cannot currently be changed.
          type: string
        version:
          description: |
            The project version under which the endpoint exists
          type: string
        path:
          description: |
            The path of the endpoint
          type: string
        operation_id:
          description: |
            The operation ID of the endpoint.
          type: string
        readable_name:
          description: |
            The name of the endpoint formatted in a readable way (e.g., Get Endpoint Metadata).
          type: string
        summary:
          description: |
            The summary of the endpoint to be displayed in the sidebar on the left of the mini-API's documentation
          type: string
        description:
          description: |
            A description of what the endpoint does. This will be shown in the mini-API documentation.
          type: string
        credits:
          description: |
            The price of the endpoint. Valid values are integers from 1 to 100.
          type: number
        group_name:
          description: |
            The name of the group of endpoints that the endpoint comes from
          type: string
        input_specification:
          description: A list of dictionaries. Each dictionary describes one parameter
            for the input, including the name, type, required boolean, and description
            values of that parameter.
          items:
            $ref: '#/components/schemas/ParameterSpecification'
          type: array
        input_examples:
          description: |
            An example of the JSON input that a user might send. Limited to one example currently.
          type: object
        output_specification:
          description: A list of dictionaries. Each dictionary describes one parameter
            for the input, including the name, type, required boolean, and description
            values of that parameter.
          items:
            $ref: '#/components/schemas/ParameterSpecification'
          type: array
        output_examples:
          description: |
            An example of the JSON output that a user might send. Limited to one example currently.
          type: object
      required:
      - credits
      - input_examples
      - input_specification
      - operation_id
      - output_examples
      - output_specification
      - path
      - project_id
      - readable_name
      - version
    Project:
      example:
        project_id: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        project_name: Serum Market Insights
        project_description: |
          This API provides several insights into serum markets including prices, momentum, and other activity.
        contact_email: info@blockchainapi.com
        groups:
        - section_header: Trading
          group_name: Price Routing
          group_description: |
            This API returns the best price routes for your swap.
        versions:
        - 0.0.1
        endpoints: []
        current_documentation_version: 0.0.1
      properties:
        project_id:
          description: |
            The ID of the project. This is auto-generated upon project creation and cannot currently be changed.
          type: string
        project_name:
          description: |
            The name of the mini-API. This will be shown at the top of the mini-API's documentation.
          type: string
        project_description:
          description: |
            The description of the mini-API. This will be shown at the top of the mini-API's documentation, below the title.
          type: string
        contact_email:
          description: |
            The email where users of your mini-API can contact you. This will be shown at the top of the mini-API's documentation.
          type: string
        current_documentation_version:
          description: |
            The version of the API that the documentation is updated for. You can set the documentation version to any valid version. To see how to format the version string, see the description for `versions`.
          type: string
        versions:
          description: |-
            The live versions of the project. An array of strings. We use Python's `version` package to see if it's a valid version and to compare versions (to see which is higher).

            Read more about this Python package <a href="https://packaging.pypa.io/en/latest/version.html#packaging.version.parse" target="_blank">here</a>.
          items:
            description: Version of the project.
            type: string
          type: array
        groups:
          description: "A list of groups. A section contains groups, and groups contain\
            \ API endpoints. \n"
          items:
            $ref: '#/components/schemas/Group'
          type: array
        endpoints:
          description: "A list of groups. A section contains groups, and groups contain\
            \ API endpoints. \n"
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
      type: object
    ProjectDeploymentURL:
      example:
        url: https://blockchain-api-third-party-project-binaries-unencrypted.s3.amazonaws.com/
        deployment_version: "1"
        fields:
          AWSAccessKeyId: TOPATIPH2VUYQ6OLXK4M
          key: AgoxbzME8A1TRgrbnglM
          policy: eyJleHBpcmF0aW9uIjogIjIwMjItMDMtMTFUMjA6MjQ6NTlaIiwgImNvbmRpdGlvbnMiOiBbWyJjb250ZW50LWxlbmd0aC1yYW5nZSIsIDEsIDUyNDI4ODAwMF0sIFsiZXEiLCAiJHgtYW16LW1ldGEtdmVyc2lvbiIsICIxIl0sIFsiZXEiLCAiJHgtYW16LW1ldGEtcGxhdGZvcm0iLCAiV2luZG93cyJdLCBbImVxIiwgIiR4LWFtei1tZXRhLWlkIiwgIkFnb3hiek1FOEExVFJncmJuZ2xNIl0sIHsiYnVja2V0IjogImJsb2NrY2hhaW4tYXBpLXRoaXJkLXBhcnR5LXByb2plY3QtYmluYXJpZXMtdW5lbmNyeXB0ZWQifSwgeyJrZXkiOiAiQWdveGJ6TUU4QTFUUmdyYm5nbE0ifV19
          signature: iJgfQd9zveVYWEE94GRJNe/apk8=
          x-amz-meta-id: AgoxbzME8A1TRgrbnglM
          x-amz-meta-platform: Windows
          x-amz-meta-version: "1"
      properties:
        url:
          description: |
            The URL of the bucket where you will upload your binary
          type: string
        deployment_version:
          description: |
            An internal version tracking the version of the binary uploaded
          type: string
        fields:
          description: |
            Information necessary to sign the upload URL
          type: object
    StatItem:
      example:
        time_stamp: 1642491000
        uid: aPzh80wU3oaiTh2esdIk7NqdIYs1
        endpoint_id: POST:/L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC/v1.0.3/nft/rarity
        api_calls: 11
        version: 1.0.3
        path: nft/rarity
      properties:
        uid:
          description: |
            The anonymous ID of the user who called your endpoint
          type: string
        time_stamp:
          description: |
            The time stamp of the ten-minute interval
          type: number
        endpoint_id:
          description: |
            The full path of the endpoint (e.g., `project_id`/`version`/`path`)
          type: string
        api_calls:
          description: |
            The number of API calls by this user to this endpoint for the ten-minute interval
          type: number
        version:
          description: The version of the endpoint
          type: string
        path:
          description: The path of the endpoint (not inclusive of the `version` or
            `project_id`)
          type: string
    EndpointReference:
      example:
        version: 1.0.3
        project_id: L3cPm0cJlf5MeDXzGLQJJ4vlzndJCC
        path: nft/rarity
      properties:
        project_id:
          description: |
            The ID of the project. This is auto-generated upon project creation and cannot currently be changed.
          type: string
        version:
          description: |
            The project version under which the endpoint exists
          type: string
        path:
          description: |
            The path of the endpoint
          type: string
      required:
      - path
      - project_id
      - version
    Account_context:
      properties:
        slot:
          type: number
      type: object
    Account_value:
      properties:
        data:
          description: More info about the account. What are included depends on the
            type of account. See examples.
          type: object
        executable:
          description: Whether or not this account is marked as executable
          type: boolean
        owner:
          description: The owner of the account
          type: string
        rent_epoch:
          type: number
      type: object
    Transaction_result:
      properties:
        block_time:
          type: number
        meta:
          type: object
        slot:
          type: number
        transaction:
          type: object
      type: object
    NFT_data:
      properties:
        creators:
          description: |
            The creators of the NFT
          items:
            description: The public key address of each creator
            type: string
          type: array
        name:
          description: |
            The name of the NFT
          type: string
        share:
          description: |
            The portion of the seller fee that each creator receives. Index 0 corresponds to creator at index 0 in the creator array, and so on. Length of share array must be the same as the length of the creator array.
          items:
            description: The share of the seller fee
            format: float
            type: number
          type: array
        symbol:
          description: |
            The symbol of the NFT
          type: string
        uri:
          description: |
            The URI of the NFT
          type: string
        verified:
          description: |
            Whether or not the respective creator has signed the minting transaction of the NFT. Index 0 corresponds to creator at index 0 in the creator array, and so on. Length of verified array must be the same as the length of the creator array.
          items:
            description: The share of the seller fee
            maximum: 1
            minimum: 0
            type: number
          type: array
      type: object
    NFTAnalyticsResponse_transaction_history:
      description: "A dictionary that maps each mint address to its transaction history.\
        \ See the example to the right (click \"Expand All\").\nThe transaction history\
        \ consists of a list of transactions. \nEach transaction is represented by\
        \ an object with the following properties: `block_time`, `exchange`, `exchange_readable`,\
        \ `mint_address`, `operation`, `seller`, `buyer`, and `transaction_signature`.\n"
      properties:
        mint_address:
          description: |
            The address of the NFT
          items:
            $ref: '#/components/schemas/NFTTransaction'
          type: array
      type: object
    GetAllNFTsResponse_minted_nfts:
      properties:
        nft_metadata:
          $ref: '#/components/schemas/NFT'
        pub_key_hash:
          description: Use this to verify the NFT
          type: string
      type: object
    GetAllNFTsResponse_unminted_nfts:
      properties:
        name:
          description: The name of the unminted NFT
          type: string
        uri:
          description: The uri of the unminted NFT
          type: string
      type: object
    GetCandyMetadataResponse_creators:
      properties:
        address:
          description: The public key of a creator
          type: string
        share:
          description: The share of the royalty that each creator receives
          type: number
      type: object
  securitySchemes:
    APIKeyID:
      description: Get a free API key pair <a target="_blank" href="https://dashboard.blockchainapi.com/api-keys">here</a>.
      in: header
      name: APIKeyID
      type: apiKey
    APISecretKey:
      description: Get a free API key pair <a target="_blank" href="https://dashboard.blockchainapi.com/api-keys">here</a>.
      in: header
      name: APISecretKey
      type: apiKey
x-tagGroups:
- name: Solana
  tags:
  - Solana Wallet
  - Solana NFT
  - Solana NFT Marketplaces
  - Solana Candy Machine
  - Solana Transaction
  - Solana Account
  - Solana SPL Token
- name: Files
  tags:
  - File
- name: API Developer Program
  tags:
  - Project
  - Endpoint
